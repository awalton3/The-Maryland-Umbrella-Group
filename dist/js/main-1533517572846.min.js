(function(angular){
'use strict';
angular
    .module('root', [
    'common',
    'components',
    'templates'
  ]);
})(window.angular);
(function(angular){
'use strict';
angular
  .module('common', [
    'ui.router',
    'ngMaterial',
    'ngMessages',
  ]);
})(window.angular);
(function(angular){
'use strict';
angular
    .module('components', [
    'components.auth',
    'components.memos'
  ])
})(window.angular);
(function(angular){
'use strict';
/**
 *
 * @ngdoc object
 * @name components.auth
 *
 * @requires ui.router,ngParse,ngMaterial,ngMessages
 *
 * @description
 *
 * This is the auth module. It includes login, register, and reset components for auth feature.
 *
 **/

angular
    .module('components.auth', [
    'ui.router',
    'ngParse',
    'ngMaterial',
    'ngMessages'
  ])
    .config(["ParseProvider", function (ParseProvider) {
        var MY_PARSE_APP_ID = 'uDzN7E7NYIbwdzKLUwNBtDtGfxyxrrBo3C6xGri3';
        var MY_PARSE_JS_KEY = '0VcWEWBLIwEcExM2Nz3TziSGjKiMsoU7SNjI5RPA';
        ParseProvider.initialize(MY_PARSE_APP_ID, MY_PARSE_JS_KEY);
        ParseProvider.serverURL = 'https://parseapi.back4app.com/';

    }])
    .run(["$transitions", "$state", "AuthService", function ($transitions, $state, AuthService) {
        $transitions.onStart({
            to: function (state) {
                return !!(state.data && state.data.requiredAuth);
            }
        }, function () {
            return AuthService
                .requireAuthentication()
                .catch(function () {
                    return $state.target('auth');
                });
        });
        $transitions.onStart({
            to: 'auth'
        }, function () {
            if (AuthService.isAuthenticated()) {
                return $state.go('app');
            }
        });
    }]);
})(window.angular);
(function(angular){
'use strict';
angular
    .module('components.memos', [
    'ui.router'
  ]);
})(window.angular);
(function(angular){
'use strict';
var root = {
    templateUrl: './root.html'
};

angular
    .module('root')
    .component('root', root);
})(window.angular);
(function(angular){
'use strict';
var app = {
    templateUrl: './app.html',
    controller: 'AppController'
};

angular
    .module('common')
    .component('app', app)
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('app', {
                redirectTo: 'memos',
                url: '/',
                data: {
                    requiredAuth: true
                },
                component: 'app'
            })
    }]);
})(window.angular);
(function(angular){
'use strict';
AppController.$inject = ["AuthService", "$state"];
function AppController(AuthService, $state) {
    var ctrl = this;
    ctrl.user = AuthService.getUser();
    ctrl.logout = function () {
        AuthService.logout()
            .then(function () {
                $state.go('auth.login');
            });
    };
}

angular
    .module('common')
    .controller('AppController', AppController);
})(window.angular);
(function(angular){
'use strict';
init.$inject = ["$rootScope", "$uiRouter", "$mdSidenav"];
function init($rootScope, $uiRouter, $mdSidenav) {
    var Visualizer = window['ui-router-visualizer'].Visualizer;
    var pluginInstance = $uiRouter.plugin(Visualizer);

    $rootScope.toggleMenu = toggleMenu;

    function toggleMenu(navId) {
        console.log('toggle sidenav: ' + navId);
        $mdSidenav(navId)
            .toggle();
    }
}

angular
    .module('common')
    .run(init)
})(window.angular);
(function(angular){
'use strict';
var auth = {
    templateUrl: './auth.html',
    controller: 'AuthController'
};

angular
    .module('components.auth')
    .component('auth', auth)
    .config(["$stateProvider", "$urlRouterProvider", function ($stateProvider, $urlRouterProvider) {
        $stateProvider
            // .state('auth', {
            //     redirectTo: 'auth',
            //     url: '/auth',
            //     templateUrl: './auth.html'
            // })
            .state('auth', {
                url: '/auth',
                component: 'auth'
            });
         $urlRouterProvider.otherwise('/auth');
    }]);
})(window.angular);
(function(angular){
'use strict';
AuthController.$inject = ["$state"];
function AuthController($state) {
    var ctrl = this;

    ctrl.$onInit = function() {
      // define variables
      ctrl.showRegister = false;
      ctrl.showReset = false;
      ctrl.showLogin = true;

      // define functions
      ctrl.toggleRegister = toggleRegister;
      ctrl.toggleReset = toggleReset;
      ctrl.toggleLogin = toggleLogin;
    }

    function toggleRegister() {
      ctrl.showRegister = !ctrl.showRegister;
      toggleLogin()
    }

    function toggleReset(event) {
      console.log(event);
      ctrl.showReset = !ctrl.showReset;
      toggleLogin();
    }

    function toggleLogin() {
      ctrl.showLogin = !ctrl.showLogin;
    }

}

angular
    .module('components.auth')
    .controller('AuthController', AuthController);
})(window.angular);
(function(angular){
'use strict';
/**
 * @ngdoc service
 * @name components.auth:AuthService
 *
 * @description Handles authentication for app
 */

AuthService.$inject = ["Parse"];
function AuthService(Parse) {
    var auth = new Parse.User(); // creates a new user in Parse
    var currentUser = null; //holds info about current user

    /**
     * @ngdoc method
     * @name AuthService#storeAuthData
     * @methodOf components.auth:AuthService
     * @param {object} obj Parse user object
     * @returns {object} returns currentUser object
     */

    function storeAuthData(response) {
        currentUser = response;
        return currentUser;
    }

    /**
     * @ngdoc method
     * @name AuthService#clearAuthData
     * @methodOf components.auth:AuthService
     * @returns {object} returns a blank user object
     */

    function clearAuthData() {
        currentUser = Parse.User.current(); // this will now be null
        return currentUser;
    }

    /**
     * @ngdoc method
     * @name AuthService#login
     * @methodOf components.auth:AuthService
     * @param {object} obj user data from auth-form
     * @returns {object} returns the current user object
     */

    this.login = function (user) {
        return Parse.User
            .logIn(user.email, user.password, {
                success: function (auth) {},
                error: function (auth, error) {
                    console.log(error);
                }
            })
            .then(storeAuthData)
            .then((currentUser) => {
                sessionStorage.setItem('currentUser', currentUser)
            });

    };

    /**
     * @ngdoc method
     * @name AuthService#register
     * @methodOf components.auth:AuthService
     * @param {object} obj user data from auth-form
     * @returns {object} returns the current user object
     */

    this.register = function (user) {
        //console.log("User: ", user);
        auth.set("username", user.email);
        auth.set("password", user.password);
        auth.set("email", user.email);
        return auth
            .signUp(null, {
                success: function (auth) {},
                error: function (auth, error) {
                    alert("Error: " + error.code + " " + error.message);
                }
            })
            .then(storeAuthData);
    };

    /**
     * @ngdoc method
     * @name AuthService#logout
     * @methodOf components.auth:AuthService
     * @returns {object} returns an empty user object
     */

    this.logout = function () {
        return Parse.User.logOut()
            .then(clearAuthData);
    };

    /**
     * @ngdoc method
     * @name AuthService#requireAuthentication
     * @methodOf components.auth:AuthService
     * @returns {promise} returns resolve or reject based on user authentication
     */

    this.requireAuthentication = function () {
        return new Promise(function (resolve, reject) {
            if (!!Parse.User.current() && Parse.User.current()
                .authenticated()) {
                resolve();
            } else {
                reject();
            }
        });
    }

    /**
     * @ngdoc method
     * @name AuthService#isAuthenticated
     * @methodOf components.auth:AuthService
     * @returns {boolean} returns whether user is authenticated based on sessionStorage
     */

    this.isAuthenticated = function () {
        // return !!(Parse.User.current() && Parse.User.current()
        //     .authenticated());
    };

    /**
     * @ngdoc method
     * @name AuthService#getUser
     * @methodOf components.auth:AuthService
     * @returns {object} returns currentUser sessionStorage object
     */

    this.getUser = function () {
        if (auth) {
            return auth;
        }
    };
};

angular
    .module('components.auth')
    .service('AuthService', AuthService);
})(window.angular);
(function(angular){
'use strict';
var memos = {
    templateUrl: './memos.html',
    controller: 'MemosController',
    bindings: {}
}

angular
    .module('components.memos')
    .component('memos', memos)
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider.state('memos', {
            parent: 'app',
            url: 'memos',
            component: 'memos'
        })
    }]);
})(window.angular);
(function(angular){
'use strict';
MemosController.$inject = ["$state"];
function MemosController($state) {

    var ctrl = this;
    ctrl.$onInit = function () {

    }

}


angular
    .module('components.memos')
    .controller('MemosController', MemosController);
})(window.angular);
(function(angular){
'use strict';
/**
 * @ngdoc component
 * @name component.auth:authForm
 *
 * @description
 * This is the stateless component for auth form
 *
 * @example
 * login.htm
 <pre>
 <auth-form user="$ctrl.user" button="Login" on-submit="$ctrl.loginUser($event);" on-reset="$ctrl.goToReset();">
 </auth-form>
  </pre>
 *
 */

var authForm = {
    bindings: {
        user: '<',
        userType: '<',
        button: '@',
        message: '@',
        onSubmit: '&',
        onReset: '&'
    },
    templateUrl: './auth-form.html',
    controller: 'AuthFormController'
};

angular
    .module('components.auth')
    .component('authForm', authForm);
})(window.angular);
(function(angular){
'use strict';
AuthFormController.$inject = ["$state"];
function AuthFormController($state) {
  var ctrl = this;

  ctrl.$onChanges = function (changes) {
    if (changes.user) {
      ctrl.user = angular.copy(ctrl.user);
    }
  };

  ctrl.submitForm = function () {
    //console.log("submit called");
    ctrl.onSubmit({
      $event: {
        user: ctrl.user
      }
    });
  };
}

angular
    .module('components.auth')
    .controller('AuthFormController', AuthFormController);
})(window.angular);
(function(angular){
'use strict';
/**
 * @ngdoc component
 * @name component.auth:login
 *
 * @description
 * This component stores info from auth-form and handles login using AuthService
 *
 */

var login = {
    templateUrl: './login.html',
    controller: 'LoginController',
    bindings: {
      userType: '@',
      onRegister: '&',
      onReset: '&'
    }
};

angular
    .module('components.auth')
    .component('login', login);
    // .config(function ($stateProvider, $urlRouterProvider) {
    //     $stateProvider
    //         // .state('auth', {
    //         //     redirectTo: 'auth.login',
    //         //     url: '/auth',
    //         //     template: '<div ui-view></div>'
    //         // })
            // .state('auth.login', {
            //     url: '/login',
            //     component: 'login'
            // });
    //     // $urlRouterProvider.otherwise('/auth/login');
    // });
})(window.angular);
(function(angular){
'use strict';
LoginController.$inject = ["AuthService", "$state"];
function LoginController(AuthService, $state) {
    var ctrl = this;

    //initialize user data
    ctrl.$onInit = function () {
        ctrl.user = {
            email: '',
            password: ''
        };
    };

  //give user access to app
  ctrl.loginUser = function (event) {
    return AuthService
      .login(event.user)
      .then(function () {
        $state.go('app');
      }, function (reason) {
        alert(reason);
      });
  };

  ctrl.goToReset = function () {
    $state.go('auth.reset');
  }

}

angular
    .module('components.auth')
    .controller('LoginController', LoginController);
})(window.angular);
(function(angular){
'use strict';
/**
 * @ngdoc component
 * @name component.auth:register
 *
 * @description
 * This component stores info from auth-form and handles registering using AuthService
 *
 */

var register = {
    templateUrl: './register.html',
    controller: 'RegisterController',
    bindings: {
      userType: '@',
      onLogin: '&'
    }
};

angular
    .module('components.auth')
    .component('register', register);
    // .config(function ($stateProvider) {
    //     $stateProvider.state('auth.register', {
    //         url: '/register',
    //         component: 'register'
    //     });
    // });
})(window.angular);
(function(angular){
'use strict';
RegisterController.$inject = ["AuthService", "$state"];
function RegisterController(AuthService, $state) {
    var ctrl = this;

    //initialize user data
    ctrl.$onInit = function () {
        ctrl.error = null;
        ctrl.user = {
            email: '',
            password: ''
        };
    };

    //creates a new user and allows access into the app
    ctrl.createUser = function (event) {
        //console.log("user:", event);
        return AuthService
            .register(event.user)
            .then(function () {
                $state.go('app');
            }, function (reason) {
                ctrl.error = reason.message;
            });
    };

}

angular
    .module('components.auth')
    .controller('RegisterController', RegisterController);
})(window.angular);
(function(angular){
'use strict';
/**
 * @ngdoc component
 * @name component.auth:reset
 *
 * @description
 * This component handles password reset and is toggled in login component
 *
 */

var reset = {
    templateUrl: './reset.html',
    controller: 'ResetController',
    bindings: {
      onLogin: '&'
    }
};

angular
    .module('components.auth')
    .component('reset', reset);
    // .config(function ($stateProvider) {
    //     $stateProvider.state('auth.reset', {
    //         url: '/reset',
    //         component: 'reset'
    //     });
    // });
})(window.angular);
(function(angular){
'use strict';
function ResetController() {

    var ctrl = this;

    ctrl.$onInit = function () {
      console.log("RESET CONTROLLER FIRED")
        // initialize variables
        ctrl.user = {};
        // initialize functions
        ctrl.reset = reset;
    }

    // password reset
    function reset(email) {
        if (email) {
            Parse
                .User
                .requestPasswordReset(email)
                .then(function () {
                    alert('A password reset email has been sent to ' + email);
                })
                .catch(function (err) {
                    alert(err.code + " " + err.message);
                });
        }
    }

}

angular
    .module('components.auth')
    .controller('ResetController', ResetController);
})(window.angular);
(function(angular){
'use strict';
angular.module('templates', []).run(['$templateCache', function($templateCache) {$templateCache.put('./root.html','<div class="root">\n    <div ui-view></div>\n</div>\n');
$templateCache.put('./app.html','<div class="root">\n    <!-- <app-nav user="$ctrl.user" on-logout="$ctrl.logout();"></app-nav> -->\n    <!-- <md-sidenav flex-order="2" md-component-id="side" md-whiteframe="3" md-disable-backdrop class="md-sidenav-right md-no-pagination app__sidenav--height app__sidenav--width app__sidenav--position app__sidenav--overflow-x">\n        <div ui-view="side"></div>\n    </md-sidenav> -->\n    <div>\n        <div ui-view></div>\n    </div>\n</div>\n');
$templateCache.put('./auth.html','  <md-content class="background height--full width--full" layout="column" layout-align="center center">\n\n    <div>\n      <img src="img/mughub_logo.png" width="200px" />\n    </div>\n\n    <div class="width--full auth--animation ng-enter" style="margin-top: -30px;">\n      <md-tabs class="auth__tabContainer width--full md-no-animation" md-center-tabs="true">\n\n        <md-tab label="STUDENT">\n          <md-content class="background">\n              <login ng-if="$ctrl.showLogin" on-register="$ctrl.toggleRegister()" on-reset="$ctrl.toggleReset()" user-type="STUDENT"></login>\n              <register ng-if="$ctrl.showRegister" on-login="$ctrl.toggleRegister()" user-type="STUDENT"></register>\n              <reset ng-if="$ctrl.showReset;"></reset>\n          </md-content>\n        </md-tab>\n\n        <md-tab label="TUTOR">\n          <md-content class="background auth--animation ng-enter">\n              <login ng-if="$ctrl.showLogin" on-register="$ctrl.toggleRegister()" on-reset="$ctrl.toggleReset($event)" user-type="TUTOR"></login>\n              <register ng-if="$ctrl.showRegister" on-login="$ctrl.toggleRegister()" user-type="TUTOR"></register>\n              <reset ng-if="$ctrl.showReset;"></reset>\n          </md-content>\n        </md-tab>\n\n      </md-tabs>\n    </div>\n\n  </md-content>\n');
$templateCache.put('./memos.html','<div>\n  This is the app.\n</div>\n');
$templateCache.put('./auth-form.html','<form layout="column" layout-align="center center" name="authForm" novalidate ng-submit="$ctrl.submitForm();">\n  <md-list layout="column" layout-align="center center">\n\n    <div>\n      <md-list-item>\n        <md-input-container layout="row" layout-align="center center" class="auth__input">\n          <label style="color:  #eaeaea; font-size: 13px; font-family: \'Montserrat\', sans-serif; padding: 5px 0px 0px 20px"><i style="vertical-align: middle; color:#eaeaea; margin:0px 4px 1px 4px" class="material-icons md-18">email</i>EMAIL</label>\n          <input class="auth__input--style auth__input--height" type="email" name="email" ng-model="$ctrl.user.email" autocomplete="off" />\n        </md-input-container>\n      </md-list-item>\n    </div>\n\n    <div>\n      <md-list-item class="auth__listItem--marginTop">\n        <md-input-container layout="row" layout-align="center center" class="auth__input">\n          <label style="color:  #eaeaea; font-size: 13px; font-family: \'Montserrat\', sans-serif; padding: 5px 0px 0px 20px"><i style="vertical-align: middle; color:#eaeaea; margin:0px 4px" class="material-icons md-18">lock</i>PASSWORD</label>\n          <input class="auth__input--style auth__input--height" type="password" name="password" ng-model="$ctrl.user.password" autocomplete="off" />\n        </md-input-container>\n        <p ng-if="$ctrl.button === \'Login\'" ng-click="$ctrl.onReset($event)" class="auth__forgot">?</p>\n      </md-list-item>\n    </div>\n\n    <div>\n      <md-list-item class="auth__listItem--marginTop">\n        <md-button type="submit" ng-disabled="authForm.$invalid" class="md-raised auth__button auth__input--height">\n          <h1 class="auth__buttonText">{{ $ctrl.button }} as a {{ $ctrl.userType }}</h1>\n        </md-button>\n      </md-list-item>\n    </div>\n\n\n  </md-list>\n</form>\n');
$templateCache.put('./login.html','<div layout="column" layout-align="center" class="auth--animation">\n    <div>\n        <auth-form user="$ctrl.user" user-type="$ctrl.userType" button="Login" on-submit="$ctrl.loginUser($event);" on-reset="$ctrl.onReset({$event: $ctrl.user.email})">\n        </auth-form>\n    </div>\n    <center>\n        <div>\n            <a ng-click="$ctrl.onRegister($event)" class="auth__trans">\n      Don\'t have an account? Create one here.\n    </a>\n        </div>\n    </center>\n</div>\n');
$templateCache.put('./register.html','<div layout="column" layout-align="center" class="auth--animation">\n    <div>\n        <auth-form user="$ctrl.user" user-type="$ctrl.userType" message="{{ $ctrl.error }}" button="Register" on-submit="$ctrl.createUser($event);">\n        </auth-form>\n    </div>\n    <center>\n        <div>\n            <a ng-click="$ctrl.onLogin($event)" class="auth__trans">Already have an account? Login here.</a>\n        </div>\n    </center>\n</div>\n');
$templateCache.put('./reset.html','<!-- <div layout="column" layout-align="center" class="auth--animation">\n  <form width="100%" name="authForm" novalidate ng-submit="$ctrl.reset($ctrl.user.email)">\n    <div width="100%" layout="column" layout-align="center center">\n      <div style="min-width:25%">\n        <md-list>\n          <md-list-item>\n            <md-input-container class="md-block" layout-fill>\n              <label>Email</label>\n              <input type="email" name="email" ng-model="$ctrl.user.email" autocomplete="off" />\n            </md-input-container>\n          </md-list-item>\n        </md-list>\n      </div>\n      <div>\n        <md-button type="submit" ng-disabled="authForm.$invalid" class="md-raised auth__button">\n          <h1 class="auth__buttonText">RESET</h1>\n        </md-button>\n      </div>\n    </div>\n  </form>\n  <center>\n    <div>\n      <a ng-click="$ctrl.onLogin($event)" class="auth__trans">Or login with an existing account.</a>\n    </div>\n  </center>\n</div> -->\n<div layout="column" layout-align="center" class="auth--animation">\n  <div>\n    <form layout="column" layout-align="center center" name="authForm" novalidate ng-submit="$ctrl.submitForm();">\n      <md-list layout="column" layout-align="center center">\n\n        <div>\n          <md-list-item>\n            <md-input-container layout="row" layout-align="center center" class="auth__input">\n              <label style="color:  #eaeaea; font-size: 13px; font-family: \'Montserrat\', sans-serif; padding: 5px 0px 0px 20px"><i style="vertical-align: middle; color:#eaeaea; margin:0px 4px 1px 4px" class="material-icons md-18">email</i>{{ $ctrl.userType }} EMAIL</label>\n              <input class="auth__input--style auth__input--height" type="email" name="email" ng-model="$ctrl.user.email" autocomplete="off" />\n            </md-input-container>\n          </md-list-item>\n        </div>\n\n        <div>\n          <md-list-item class="auth__listItem--marginTop">\n            <md-button type="submit" ng-disabled="authForm.$invalid" class="md-raised auth__button auth__input--height">\n              <h1 class="auth__buttonText">RESET</h1>\n            </md-button>\n          </md-list-item>\n        </div>\n\n      </md-list>\n    </form>\n  </div>\n  <center>\n    <div>\n      <a ng-click="$ctrl.onLogin($event)" class="auth__trans">Or login with an existing account.</a>\n    </div>\n  </center>\n</div>\n');}]);})(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvb3QubW9kdWxlLmpzIiwiY29tbW9uL2FwcC5tb2R1bGUuanMiLCJjb21wb25lbnRzL2NvbXBvbmVudHMubW9kdWxlLmpzIiwiY29tcG9uZW50cy9hdXRoL2F1dGgubW9kdWxlLmpzIiwiY29tcG9uZW50cy9tZW1vcy9tZW1vcy5tb2R1bGUuanMiLCJyb290LmNvbXBvbmVudC5qcyIsImNvbW1vbi9hcHAuY29tcG9uZW50LmpzIiwiY29tbW9uL2FwcC5jb250cm9sbGVyLmpzIiwiY29tbW9uL2FwcC5ydW4uanMiLCJjb21wb25lbnRzL2F1dGgvYXV0aC5jb21wb25lbnQuanMiLCJjb21wb25lbnRzL2F1dGgvYXV0aC5jb250cm9sbGVyLmpzIiwiY29tcG9uZW50cy9hdXRoL2F1dGguc2VydmljZS5qcyIsImNvbXBvbmVudHMvbWVtb3MvbWVtb3MuY29tcG9uZW50LmpzIiwiY29tcG9uZW50cy9tZW1vcy9tZW1vcy5jb250cm9sbGVyLmpzIiwiY29tcG9uZW50cy9hdXRoL2F1dGgtZm9ybS9hdXRoLWZvcm0uY29tcG9uZW50LmpzIiwiY29tcG9uZW50cy9hdXRoL2F1dGgtZm9ybS9hdXRoLWZvcm0uY29udHJvbGxlci5qcyIsImNvbXBvbmVudHMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuanMiLCJjb21wb25lbnRzL2F1dGgvbG9naW4vbG9naW4uY29udHJvbGxlci5qcyIsImNvbXBvbmVudHMvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuanMiLCJjb21wb25lbnRzL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29udHJvbGxlci5qcyIsImNvbXBvbmVudHMvYXV0aC9yZXNldC9yZXNldC5jb21wb25lbnQuanMiLCJjb21wb25lbnRzL2F1dGgvcmVzZXQvcmVzZXQuY29udHJvbGxlci5qcyIsInRlbXBsYXRlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFBLFNBQUEsUUFBQTtBQUNBO0FBQ0E7S0FDQSxPQUFBLFFB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LFNBQUEsWUFBQSxPQUFBO01BQ0EsUUFBQSxJQUFBO01BQ0EsS0FBQSxZQUFBLENBQUEsS0FBQTtNQUNBOzs7SUFHQSxTQUFBLGNBQUE7TUFDQSxLQUFBLFlBQUEsQ0FBQSxLQUFBOzs7OztBQUtBO0tBQ0EsT0FBQTtLQUNBLFdBQUEsa0JBQUE7R0FDQSxPQUFBO0FDckNBLENBQUEsU0FBQSxRQUFBO0FBQ0E7Ozs7Ozs7OztBQVFBLFNBQUEsWUFBQSxPQUFBO0lBQ0EsSUFBQSxPQUFBLElBQUEsTUFBQTtJQUNBLElBQUEsY0FBQTs7Ozs7Ozs7OztJQVVBLFNBQUEsY0FBQSxVQUFBO1FBQ0EsY0FBQTtRQUNBLE9BQUE7Ozs7Ozs7Ozs7SUFVQSxTQUFBLGdCQUFBO1FBQ0EsY0FBQSxNQUFBLEtBQUE7UUFDQSxPQUFBOzs7Ozs7Ozs7OztJQVdBLEtBQUEsUUFBQSxVQUFBLE1BQUE7UUFDQSxPQUFBLE1BQUE7YUFDQSxNQUFBLEtBQUEsT0FBQSxLQUFBLFVBQUE7Z0JBQ0EsU0FBQSxVQUFBLE1BQUE7Z0JBQ0EsT0FBQSxVQUFBLE1BQUEsT0FBQTtvQkFDQSxRQUFBLElBQUE7OzthQUdBLEtBQUE7YUFDQSxLQUFBOzs7Ozs7Ozs7Ozs7OztJQWNBLEtBQUEsV0FBQSxVQUFBLE1BQUE7O1FBRUEsS0FBQSxJQUFBLFlBQUEsS0FBQTtRQUNBLEtBQUEsSUFBQSxZQUFBLEtBQUE7UUFDQSxLQUFBLElBQUEsU0FBQSxLQUFBO1FBQ0EsT0FBQTthQUNBLE9BQUEsTUFBQTtnQkFDQSxTQUFBLFVBQUEsTUFBQTtnQkFDQSxPQUFBLFVBQUEsTUFBQSxPQUFBO29CQUNBLE1BQUEsWUFBQSxNQUFBLE9BQUEsTUFBQSxNQUFBOzs7YUFHQSxLQUFBOzs7Ozs7Ozs7O0lBVUEsS0FBQSxTQUFBLFlBQUE7UUFDQSxPQUFBLE1BQUEsS0FBQTthQUNBLEtBQUE7Ozs7Ozs7Ozs7SUFVQSxLQUFBLHdCQUFBLFlBQUE7UUFDQSxPQUFBLElBQUEsUUFBQSxVQUFBLFNBQUEsUUFBQTtZQUNBLElBQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQSxh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QUNBLFVBQUEsUUFBQTtnQkFDQSxLQUFBLFFBQUEsT0FBQTs7Ozs7O0FBTUE7S0FDQSxPQUFBO0tBQ0EsV0FBQSxzQkFBQTtHQUNBLE9BQUE7QUMvQkEsQ0FBQSxTQUFBLFFBQUE7QUFDQTs7Ozs7Ozs7OztBQVVBLElBQUEsUUFBQTtJQUNBLGFBQUE7SUFDQSxZQUFBO0lBQ0EsVUFBQTtNQUNBLFNBQUE7Ozs7QUFJQTtLQUNBLE9BQUE7S0FDQSxVQUFBLFNBQUE7Ozs7Ozs7R0FPQSxPQUFBO0FDNUJBLENBQUEsU0FBQSxRQUFBO0FBQ0E7QUFDQSxTQUFBLGtCQUFBOztJQUVBLElBQUEsT0FBQTs7SUFFQSxLQUFBLFVBQUEsWUFBQTtNQUNBLFFBQUEsSUFBQTs7UUFFQSxLQUFBLE9BQUE7O1FBRUEsS0FBQSxRQUFBOzs7O0lBSUEsU0FBQSxNQUFBLE9BQUE7UUFDQSxJQUFBLE9BQUE7WUFDQTtpQkFDQTtpQkFDQSxxQkFBQTtpQkFDQSxLQUFBLFlBQUE7b0JBQ0EsTUFBQSw2Q0FBQTs7aUJBRUEsTUFBQSxVQUFBLEtBQUE7b0JBQ0EsTUFBQSxJQUFBLE9BQUEsTUFBQSxJQUFBOzs7Ozs7O0FBT0E7S0FDQSxPQUFBO0tBQ0EsV0FBQSxtQkFBQTtHQUNBLE9BQUE7QUNsQ0EsQ0FBQSxTQUFBLFFBQUE7QUFDQTtBQUNBLFFBQUEsT0FBQSxhQUFBLElBQUEsSUFBQSxDQUFBLGtCQUFBLFNBQUEsZ0JBQUEsQ0FBQSxlQUFBLElBQUEsY0FBQTtBQUNBLGVBQUEsSUFBQSxhQUFBO0FBQ0EsZUFBQSxJQUFBLGNBQUE7QUFDQSxlQUFBLElBQUEsZUFBQTtBQUNBLGVBQUEsSUFBQSxtQkFBQTtBQUNBLGVBQUEsSUFBQSxlQUFBO0FBQ0EsZUFBQSxJQUFBLGtCQUFBO0FBQ0EsZUFBQSxJQUFBLGVBQUEscTNFQUFBLE9BQUEsU0FBQSIsImZpbGUiOiJtYWluLTE1MzM1MTc1NzI4NDYubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhclxuICAgIC5tb2R1bGUoJ3Jvb3QnLCBbXG4gICAgJ2NvbW1vbicsXG4gICAgJ2NvbXBvbmVudHMnLFxuICAgICd0ZW1wbGF0ZXMnXG4gIF0pO1xuIiwiYW5ndWxhclxuICAubW9kdWxlKCdjb21tb24nLCBbXG4gICAgJ3VpLnJvdXRlcicsXG4gICAgJ25nTWF0ZXJpYWwnLFxuICAgICduZ01lc3NhZ2VzJyxcbiAgXSk7XG4iLCJhbmd1bGFyXG4gICAgLm1vZHVsZSgnY29tcG9uZW50cycsIFtcbiAgICAnY29tcG9uZW50cy5hdXRoJyxcbiAgICAnY29tcG9uZW50cy5tZW1vcydcbiAgXSlcbiIsIi8qKlxuICpcbiAqIEBuZ2RvYyBvYmplY3RcbiAqIEBuYW1lIGNvbXBvbmVudHMuYXV0aFxuICpcbiAqIEByZXF1aXJlcyB1aS5yb3V0ZXIsbmdQYXJzZSxuZ01hdGVyaWFsLG5nTWVzc2FnZXNcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBUaGlzIGlzIHRoZSBhdXRoIG1vZHVsZS4gSXQgaW5jbHVkZXMgbG9naW4sIHJlZ2lzdGVyLCBhbmQgcmVzZXQgY29tcG9uZW50cyBmb3IgYXV0aCBmZWF0dXJlLlxuICpcbiAqKi9cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbXBvbmVudHMuYXV0aCcsIFtcbiAgICAndWkucm91dGVyJyxcbiAgICAnbmdQYXJzZScsXG4gICAgJ25nTWF0ZXJpYWwnLFxuICAgICduZ01lc3NhZ2VzJ1xuICBdKVxuICAgIC5jb25maWcoZnVuY3Rpb24gKFBhcnNlUHJvdmlkZXIpIHtcbiAgICAgICAgdmFyIE1ZX1BBUlNFX0FQUF9JRCA9ICd1RHpON0U3TllJYndkektMVXdOQnREdEdmeHl4cnJCbzNDNnhHcmkzJztcbiAgICAgICAgdmFyIE1ZX1BBUlNFX0pTX0tFWSA9ICcwVmNXRVdCTEl3RWNFeE0yTnozVHppU0dqS2lNc29VN1NOakk1UlBBJztcbiAgICAgICAgUGFyc2VQcm92aWRlci5pbml0aWFsaXplKE1ZX1BBUlNFX0FQUF9JRCwgTVlfUEFSU0VfSlNfS0VZKTtcbiAgICAgICAgUGFyc2VQcm92aWRlci5zZXJ2ZXJVUkwgPSAnaHR0cHM6Ly9wYXJzZWFwaS5iYWNrNGFwcC5jb20vJztcblxuICAgIH0pXG4gICAgLnJ1bihmdW5jdGlvbiAoJHRyYW5zaXRpb25zLCAkc3RhdGUsIEF1dGhTZXJ2aWNlKSB7XG4gICAgICAgICR0cmFuc2l0aW9ucy5vblN0YXJ0KHtcbiAgICAgICAgICAgIHRvOiBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gISEoc3RhdGUuZGF0YSAmJiBzdGF0ZS5kYXRhLnJlcXVpcmVkQXV0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBBdXRoU2VydmljZVxuICAgICAgICAgICAgICAgIC5yZXF1aXJlQXV0aGVudGljYXRpb24oKVxuICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkc3RhdGUudGFyZ2V0KCdhdXRoJyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICAkdHJhbnNpdGlvbnMub25TdGFydCh7XG4gICAgICAgICAgICB0bzogJ2F1dGgnXG4gICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChBdXRoU2VydmljZS5pc0F1dGhlbnRpY2F0ZWQoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAkc3RhdGUuZ28oJ2FwcCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbiIsImFuZ3VsYXJcbiAgICAubW9kdWxlKCdjb21wb25lbnRzLm1lbW9zJywgW1xuICAgICd1aS5yb3V0ZXInXG4gIF0pO1xuIiwidmFyIHJvb3QgPSB7XG4gICAgdGVtcGxhdGVVcmw6ICcuL3Jvb3QuaHRtbCdcbn07XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdyb290JylcbiAgICAuY29tcG9uZW50KCdyb290Jywgcm9vdCk7XG4iLCJ2YXIgYXBwID0ge1xuICAgIHRlbXBsYXRlVXJsOiAnLi9hcHAuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0FwcENvbnRyb2xsZXInXG59O1xuXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnY29tbW9uJylcbiAgICAuY29tcG9uZW50KCdhcHAnLCBhcHApXG4gICAgLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIpIHtcbiAgICAgICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwJywge1xuICAgICAgICAgICAgICAgIHJlZGlyZWN0VG86ICdtZW1vcycsXG4gICAgICAgICAgICAgICAgdXJsOiAnLycsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZEF1dGg6IHRydWVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudDogJ2FwcCdcbiAgICAgICAgICAgIH0pXG4gICAgfSk7XG4iLCJmdW5jdGlvbiBBcHBDb250cm9sbGVyKEF1dGhTZXJ2aWNlLCAkc3RhdGUpIHtcbiAgICB2YXIgY3RybCA9IHRoaXM7XG4gICAgY3RybC51c2VyID0gQXV0aFNlcnZpY2UuZ2V0VXNlcigpO1xuICAgIGN0cmwubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBBdXRoU2VydmljZS5sb2dvdXQoKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICRzdGF0ZS5nbygnYXV0aC5sb2dpbicpO1xuICAgICAgICAgICAgfSk7XG4gICAgfTtcbn1cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbW1vbicpXG4gICAgLmNvbnRyb2xsZXIoJ0FwcENvbnRyb2xsZXInLCBBcHBDb250cm9sbGVyKTtcbiIsImZ1bmN0aW9uIGluaXQoJHJvb3RTY29wZSwgJHVpUm91dGVyLCAkbWRTaWRlbmF2KSB7XG4gICAgdmFyIFZpc3VhbGl6ZXIgPSB3aW5kb3dbJ3VpLXJvdXRlci12aXN1YWxpemVyJ10uVmlzdWFsaXplcjtcbiAgICB2YXIgcGx1Z2luSW5zdGFuY2UgPSAkdWlSb3V0ZXIucGx1Z2luKFZpc3VhbGl6ZXIpO1xuXG4gICAgJHJvb3RTY29wZS50b2dnbGVNZW51ID0gdG9nZ2xlTWVudTtcblxuICAgIGZ1bmN0aW9uIHRvZ2dsZU1lbnUobmF2SWQpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3RvZ2dsZSBzaWRlbmF2OiAnICsgbmF2SWQpO1xuICAgICAgICAkbWRTaWRlbmF2KG5hdklkKVxuICAgICAgICAgICAgLnRvZ2dsZSgpO1xuICAgIH1cbn1cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbW1vbicpXG4gICAgLnJ1bihpbml0KVxuIiwidmFyIGF1dGggPSB7XG4gICAgdGVtcGxhdGVVcmw6ICcuL2F1dGguaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0F1dGhDb250cm9sbGVyJ1xufTtcblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbXBvbmVudHMuYXV0aCcpXG4gICAgLmNvbXBvbmVudCgnYXV0aCcsIGF1dGgpXG4gICAgLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikge1xuICAgICAgICAkc3RhdGVQcm92aWRlclxuICAgICAgICAgICAgLy8gLnN0YXRlKCdhdXRoJywge1xuICAgICAgICAgICAgLy8gICAgIHJlZGlyZWN0VG86ICdhdXRoJyxcbiAgICAgICAgICAgIC8vICAgICB1cmw6ICcvYXV0aCcsXG4gICAgICAgICAgICAvLyAgICAgdGVtcGxhdGVVcmw6ICcuL2F1dGguaHRtbCdcbiAgICAgICAgICAgIC8vIH0pXG4gICAgICAgICAgICAuc3RhdGUoJ2F1dGgnLCB7XG4gICAgICAgICAgICAgICAgdXJsOiAnL2F1dGgnLFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudDogJ2F1dGgnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9hdXRoJyk7XG4gICAgfSk7XG4iLCJmdW5jdGlvbiBBdXRoQ29udHJvbGxlcigkc3RhdGUpIHtcbiAgICB2YXIgY3RybCA9IHRoaXM7XG5cbiAgICBjdHJsLiRvbkluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIGRlZmluZSB2YXJpYWJsZXNcbiAgICAgIGN0cmwuc2hvd1JlZ2lzdGVyID0gZmFsc2U7XG4gICAgICBjdHJsLnNob3dSZXNldCA9IGZhbHNlO1xuICAgICAgY3RybC5zaG93TG9naW4gPSB0cnVlO1xuXG4gICAgICAvLyBkZWZpbmUgZnVuY3Rpb25zXG4gICAgICBjdHJsLnRvZ2dsZVJlZ2lzdGVyID0gdG9nZ2xlUmVnaXN0ZXI7XG4gICAgICBjdHJsLnRvZ2dsZVJlc2V0ID0gdG9nZ2xlUmVzZXQ7XG4gICAgICBjdHJsLnRvZ2dsZUxvZ2luID0gdG9nZ2xlTG9naW47XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdG9nZ2xlUmVnaXN0ZXIoKSB7XG4gICAgICBjdHJsLnNob3dSZWdpc3RlciA9ICFjdHJsLnNob3dSZWdpc3RlcjtcbiAgICAgIHRvZ2dsZUxvZ2luKClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b2dnbGVSZXNldChldmVudCkge1xuICAgICAgY29uc29sZS5sb2coZXZlbnQpO1xuICAgICAgY3RybC5zaG93UmVzZXQgPSAhY3RybC5zaG93UmVzZXQ7XG4gICAgICB0b2dnbGVMb2dpbigpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRvZ2dsZUxvZ2luKCkge1xuICAgICAgY3RybC5zaG93TG9naW4gPSAhY3RybC5zaG93TG9naW47XG4gICAgfVxuXG59XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdjb21wb25lbnRzLmF1dGgnKVxuICAgIC5jb250cm9sbGVyKCdBdXRoQ29udHJvbGxlcicsIEF1dGhDb250cm9sbGVyKTtcbiIsIi8qKlxuICogQG5nZG9jIHNlcnZpY2VcbiAqIEBuYW1lIGNvbXBvbmVudHMuYXV0aDpBdXRoU2VydmljZVxuICpcbiAqIEBkZXNjcmlwdGlvbiBIYW5kbGVzIGF1dGhlbnRpY2F0aW9uIGZvciBhcHBcbiAqL1xuXG5mdW5jdGlvbiBBdXRoU2VydmljZShQYXJzZSkge1xuICAgIHZhciBhdXRoID0gbmV3IFBhcnNlLlVzZXIoKTsgLy8gY3JlYXRlcyBhIG5ldyB1c2VyIGluIFBhcnNlXG4gICAgdmFyIGN1cnJlbnRVc2VyID0gbnVsbDsgLy9ob2xkcyBpbmZvIGFib3V0IGN1cnJlbnQgdXNlclxuXG4gICAgLyoqXG4gICAgICogQG5nZG9jIG1ldGhvZFxuICAgICAqIEBuYW1lIEF1dGhTZXJ2aWNlI3N0b3JlQXV0aERhdGFcbiAgICAgKiBAbWV0aG9kT2YgY29tcG9uZW50cy5hdXRoOkF1dGhTZXJ2aWNlXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9iaiBQYXJzZSB1c2VyIG9iamVjdFxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IHJldHVybnMgY3VycmVudFVzZXIgb2JqZWN0XG4gICAgICovXG5cbiAgICBmdW5jdGlvbiBzdG9yZUF1dGhEYXRhKHJlc3BvbnNlKSB7XG4gICAgICAgIGN1cnJlbnRVc2VyID0gcmVzcG9uc2U7XG4gICAgICAgIHJldHVybiBjdXJyZW50VXNlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbmdkb2MgbWV0aG9kXG4gICAgICogQG5hbWUgQXV0aFNlcnZpY2UjY2xlYXJBdXRoRGF0YVxuICAgICAqIEBtZXRob2RPZiBjb21wb25lbnRzLmF1dGg6QXV0aFNlcnZpY2VcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSByZXR1cm5zIGEgYmxhbmsgdXNlciBvYmplY3RcbiAgICAgKi9cblxuICAgIGZ1bmN0aW9uIGNsZWFyQXV0aERhdGEoKSB7XG4gICAgICAgIGN1cnJlbnRVc2VyID0gUGFyc2UuVXNlci5jdXJyZW50KCk7IC8vIHRoaXMgd2lsbCBub3cgYmUgbnVsbFxuICAgICAgICByZXR1cm4gY3VycmVudFVzZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQG5nZG9jIG1ldGhvZFxuICAgICAqIEBuYW1lIEF1dGhTZXJ2aWNlI2xvZ2luXG4gICAgICogQG1ldGhvZE9mIGNvbXBvbmVudHMuYXV0aDpBdXRoU2VydmljZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvYmogdXNlciBkYXRhIGZyb20gYXV0aC1mb3JtXG4gICAgICogQHJldHVybnMge29iamVjdH0gcmV0dXJucyB0aGUgY3VycmVudCB1c2VyIG9iamVjdFxuICAgICAqL1xuXG4gICAgdGhpcy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgIHJldHVybiBQYXJzZS5Vc2VyXG4gICAgICAgICAgICAubG9nSW4odXNlci5lbWFpbCwgdXNlci5wYXNzd29yZCwge1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChhdXRoKSB7fSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGF1dGgsIGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oc3RvcmVBdXRoRGF0YSlcbiAgICAgICAgICAgIC50aGVuKChjdXJyZW50VXNlcikgPT4ge1xuICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ2N1cnJlbnRVc2VyJywgY3VycmVudFVzZXIpXG4gICAgICAgICAgICB9KTtcblxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBAbmdkb2MgbWV0aG9kXG4gICAgICogQG5hbWUgQXV0aFNlcnZpY2UjcmVnaXN0ZXJcbiAgICAgKiBAbWV0aG9kT2YgY29tcG9uZW50cy5hdXRoOkF1dGhTZXJ2aWNlXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9iaiB1c2VyIGRhdGEgZnJvbSBhdXRoLWZvcm1cbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSByZXR1cm5zIHRoZSBjdXJyZW50IHVzZXIgb2JqZWN0XG4gICAgICovXG5cbiAgICB0aGlzLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcIlVzZXI6IFwiLCB1c2VyKTtcbiAgICAgICAgYXV0aC5zZXQoXCJ1c2VybmFtZVwiLCB1c2VyLmVtYWlsKTtcbiAgICAgICAgYXV0aC5zZXQoXCJwYXNzd29yZFwiLCB1c2VyLnBhc3N3b3JkKTtcbiAgICAgICAgYXV0aC5zZXQoXCJlbWFpbFwiLCB1c2VyLmVtYWlsKTtcbiAgICAgICAgcmV0dXJuIGF1dGhcbiAgICAgICAgICAgIC5zaWduVXAobnVsbCwge1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChhdXRoKSB7fSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGF1dGgsIGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwiRXJyb3I6IFwiICsgZXJyb3IuY29kZSArIFwiIFwiICsgZXJyb3IubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHN0b3JlQXV0aERhdGEpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBAbmdkb2MgbWV0aG9kXG4gICAgICogQG5hbWUgQXV0aFNlcnZpY2UjbG9nb3V0XG4gICAgICogQG1ldGhvZE9mIGNvbXBvbmVudHMuYXV0aDpBdXRoU2VydmljZVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IHJldHVybnMgYW4gZW1wdHkgdXNlciBvYmplY3RcbiAgICAgKi9cblxuICAgIHRoaXMubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gUGFyc2UuVXNlci5sb2dPdXQoKVxuICAgICAgICAgICAgLnRoZW4oY2xlYXJBdXRoRGF0YSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEBuZ2RvYyBtZXRob2RcbiAgICAgKiBAbmFtZSBBdXRoU2VydmljZSNyZXF1aXJlQXV0aGVudGljYXRpb25cbiAgICAgKiBAbWV0aG9kT2YgY29tcG9uZW50cy5hdXRoOkF1dGhTZXJ2aWNlXG4gICAgICogQHJldHVybnMge3Byb21pc2V9IHJldHVybnMgcmVzb2x2ZSBvciByZWplY3QgYmFzZWQgb24gdXNlciBhdXRoZW50aWNhdGlvblxuICAgICAqL1xuXG4gICAgdGhpcy5yZXF1aXJlQXV0aGVudGljYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICBpZiAoISFQYXJzZS5Vc2VyLmN1cnJlbnQoKSAmJiBQYXJzZS5Vc2VyLmN1cnJlbnQoKVxuICAgICAgICAgICAgICAgIC5hdXRoZW50aWNhdGVkKCkpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlamVjdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbmdkb2MgbWV0aG9kXG4gICAgICogQG5hbWUgQXV0aFNlcnZpY2UjaXNBdXRoZW50aWNhdGVkXG4gICAgICogQG1ldGhvZE9mIGNvbXBvbmVudHMuYXV0aDpBdXRoU2VydmljZVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSByZXR1cm5zIHdoZXRoZXIgdXNlciBpcyBhdXRoZW50aWNhdGVkIGJhc2VkIG9uIHNlc3Npb25TdG9yYWdlXG4gICAgICovXG5cbiAgICB0aGlzLmlzQXV0aGVudGljYXRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gcmV0dXJuICEhKFBhcnNlLlVzZXIuY3VycmVudCgpICYmIFBhcnNlLlVzZXIuY3VycmVudCgpXG4gICAgICAgIC8vICAgICAuYXV0aGVudGljYXRlZCgpKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQG5nZG9jIG1ldGhvZFxuICAgICAqIEBuYW1lIEF1dGhTZXJ2aWNlI2dldFVzZXJcbiAgICAgKiBAbWV0aG9kT2YgY29tcG9uZW50cy5hdXRoOkF1dGhTZXJ2aWNlXG4gICAgICogQHJldHVybnMge29iamVjdH0gcmV0dXJucyBjdXJyZW50VXNlciBzZXNzaW9uU3RvcmFnZSBvYmplY3RcbiAgICAgKi9cblxuICAgIHRoaXMuZ2V0VXNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGF1dGgpIHtcbiAgICAgICAgICAgIHJldHVybiBhdXRoO1xuICAgICAgICB9XG4gICAgfTtcbn07XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdjb21wb25lbnRzLmF1dGgnKVxuICAgIC5zZXJ2aWNlKCdBdXRoU2VydmljZScsIEF1dGhTZXJ2aWNlKTtcbiIsInZhciBtZW1vcyA9IHtcbiAgICB0ZW1wbGF0ZVVybDogJy4vbWVtb3MuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ01lbW9zQ29udHJvbGxlcicsXG4gICAgYmluZGluZ3M6IHt9XG59XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdjb21wb25lbnRzLm1lbW9zJylcbiAgICAuY29tcG9uZW50KCdtZW1vcycsIG1lbW9zKVxuICAgIC5jb25maWcoZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyKSB7XG4gICAgICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdtZW1vcycsIHtcbiAgICAgICAgICAgIHBhcmVudDogJ2FwcCcsXG4gICAgICAgICAgICB1cmw6ICdtZW1vcycsXG4gICAgICAgICAgICBjb21wb25lbnQ6ICdtZW1vcydcbiAgICAgICAgfSlcbiAgICB9KTtcbiIsImZ1bmN0aW9uIE1lbW9zQ29udHJvbGxlcigkc3RhdGUpIHtcblxuICAgIHZhciBjdHJsID0gdGhpcztcbiAgICBjdHJsLiRvbkluaXQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB9XG5cbn1cblxuXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnY29tcG9uZW50cy5tZW1vcycpXG4gICAgLmNvbnRyb2xsZXIoJ01lbW9zQ29udHJvbGxlcicsIE1lbW9zQ29udHJvbGxlcik7XG4iLCIvKipcbiAqIEBuZ2RvYyBjb21wb25lbnRcbiAqIEBuYW1lIGNvbXBvbmVudC5hdXRoOmF1dGhGb3JtXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIGlzIHRoZSBzdGF0ZWxlc3MgY29tcG9uZW50IGZvciBhdXRoIGZvcm1cbiAqXG4gKiBAZXhhbXBsZVxuICogbG9naW4uaHRtXG4gPHByZT5cbiA8YXV0aC1mb3JtIHVzZXI9XCIkY3RybC51c2VyXCIgYnV0dG9uPVwiTG9naW5cIiBvbi1zdWJtaXQ9XCIkY3RybC5sb2dpblVzZXIoJGV2ZW50KTtcIiBvbi1yZXNldD1cIiRjdHJsLmdvVG9SZXNldCgpO1wiPlxuIDwvYXV0aC1mb3JtPlxuICA8L3ByZT5cbiAqXG4gKi9cblxudmFyIGF1dGhGb3JtID0ge1xuICAgIGJpbmRpbmdzOiB7XG4gICAgICAgIHVzZXI6ICc8JyxcbiAgICAgICAgdXNlclR5cGU6ICc8JyxcbiAgICAgICAgYnV0dG9uOiAnQCcsXG4gICAgICAgIG1lc3NhZ2U6ICdAJyxcbiAgICAgICAgb25TdWJtaXQ6ICcmJyxcbiAgICAgICAgb25SZXNldDogJyYnXG4gICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYXV0aC1mb3JtLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdBdXRoRm9ybUNvbnRyb2xsZXInXG59O1xuXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnY29tcG9uZW50cy5hdXRoJylcbiAgICAuY29tcG9uZW50KCdhdXRoRm9ybScsIGF1dGhGb3JtKTtcbiIsImZ1bmN0aW9uIEF1dGhGb3JtQ29udHJvbGxlcigkc3RhdGUpIHtcbiAgdmFyIGN0cmwgPSB0aGlzO1xuXG4gIGN0cmwuJG9uQ2hhbmdlcyA9IGZ1bmN0aW9uIChjaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXMudXNlcikge1xuICAgICAgY3RybC51c2VyID0gYW5ndWxhci5jb3B5KGN0cmwudXNlcik7XG4gICAgfVxuICB9O1xuXG4gIGN0cmwuc3VibWl0Rm9ybSA9IGZ1bmN0aW9uICgpIHtcbiAgICAvL2NvbnNvbGUubG9nKFwic3VibWl0IGNhbGxlZFwiKTtcbiAgICBjdHJsLm9uU3VibWl0KHtcbiAgICAgICRldmVudDoge1xuICAgICAgICB1c2VyOiBjdHJsLnVzZXJcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn1cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbXBvbmVudHMuYXV0aCcpXG4gICAgLmNvbnRyb2xsZXIoJ0F1dGhGb3JtQ29udHJvbGxlcicsIEF1dGhGb3JtQ29udHJvbGxlcik7XG4iLCIvKipcbiAqIEBuZ2RvYyBjb21wb25lbnRcbiAqIEBuYW1lIGNvbXBvbmVudC5hdXRoOmxvZ2luXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIGNvbXBvbmVudCBzdG9yZXMgaW5mbyBmcm9tIGF1dGgtZm9ybSBhbmQgaGFuZGxlcyBsb2dpbiB1c2luZyBBdXRoU2VydmljZVxuICpcbiAqL1xuXG52YXIgbG9naW4gPSB7XG4gICAgdGVtcGxhdGVVcmw6ICcuL2xvZ2luLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdMb2dpbkNvbnRyb2xsZXInLFxuICAgIGJpbmRpbmdzOiB7XG4gICAgICB1c2VyVHlwZTogJ0AnLFxuICAgICAgb25SZWdpc3RlcjogJyYnLFxuICAgICAgb25SZXNldDogJyYnXG4gICAgfVxufTtcblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbXBvbmVudHMuYXV0aCcpXG4gICAgLmNvbXBvbmVudCgnbG9naW4nLCBsb2dpbik7XG4gICAgLy8gLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikge1xuICAgIC8vICAgICAkc3RhdGVQcm92aWRlclxuICAgIC8vICAgICAgICAgLy8gLnN0YXRlKCdhdXRoJywge1xuICAgIC8vICAgICAgICAgLy8gICAgIHJlZGlyZWN0VG86ICdhdXRoLmxvZ2luJyxcbiAgICAvLyAgICAgICAgIC8vICAgICB1cmw6ICcvYXV0aCcsXG4gICAgLy8gICAgICAgICAvLyAgICAgdGVtcGxhdGU6ICc8ZGl2IHVpLXZpZXc+PC9kaXY+J1xuICAgIC8vICAgICAgICAgLy8gfSlcbiAgICAgICAgICAgIC8vIC5zdGF0ZSgnYXV0aC5sb2dpbicsIHtcbiAgICAgICAgICAgIC8vICAgICB1cmw6ICcvbG9naW4nLFxuICAgICAgICAgICAgLy8gICAgIGNvbXBvbmVudDogJ2xvZ2luJ1xuICAgICAgICAgICAgLy8gfSk7XG4gICAgLy8gICAgIC8vICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9hdXRoL2xvZ2luJyk7XG4gICAgLy8gfSk7XG4iLCJmdW5jdGlvbiBMb2dpbkNvbnRyb2xsZXIoQXV0aFNlcnZpY2UsICRzdGF0ZSkge1xuICAgIHZhciBjdHJsID0gdGhpcztcblxuICAgIC8vaW5pdGlhbGl6ZSB1c2VyIGRhdGFcbiAgICBjdHJsLiRvbkluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGN0cmwudXNlciA9IHtcbiAgICAgICAgICAgIGVtYWlsOiAnJyxcbiAgICAgICAgICAgIHBhc3N3b3JkOiAnJ1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgLy9naXZlIHVzZXIgYWNjZXNzIHRvIGFwcFxuICBjdHJsLmxvZ2luVXNlciA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIHJldHVybiBBdXRoU2VydmljZVxuICAgICAgLmxvZ2luKGV2ZW50LnVzZXIpXG4gICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XG4gICAgICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICAgIGFsZXJ0KHJlYXNvbik7XG4gICAgICB9KTtcbiAgfTtcblxuICBjdHJsLmdvVG9SZXNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkc3RhdGUuZ28oJ2F1dGgucmVzZXQnKTtcbiAgfVxuXG59XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdjb21wb25lbnRzLmF1dGgnKVxuICAgIC5jb250cm9sbGVyKCdMb2dpbkNvbnRyb2xsZXInLCBMb2dpbkNvbnRyb2xsZXIpO1xuIiwiLyoqXG4gKiBAbmdkb2MgY29tcG9uZW50XG4gKiBAbmFtZSBjb21wb25lbnQuYXV0aDpyZWdpc3RlclxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBjb21wb25lbnQgc3RvcmVzIGluZm8gZnJvbSBhdXRoLWZvcm0gYW5kIGhhbmRsZXMgcmVnaXN0ZXJpbmcgdXNpbmcgQXV0aFNlcnZpY2VcbiAqXG4gKi9cblxudmFyIHJlZ2lzdGVyID0ge1xuICAgIHRlbXBsYXRlVXJsOiAnLi9yZWdpc3Rlci5odG1sJyxcbiAgICBjb250cm9sbGVyOiAnUmVnaXN0ZXJDb250cm9sbGVyJyxcbiAgICBiaW5kaW5nczoge1xuICAgICAgdXNlclR5cGU6ICdAJyxcbiAgICAgIG9uTG9naW46ICcmJ1xuICAgIH1cbn07XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdjb21wb25lbnRzLmF1dGgnKVxuICAgIC5jb21wb25lbnQoJ3JlZ2lzdGVyJywgcmVnaXN0ZXIpO1xuICAgIC8vIC5jb25maWcoZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyKSB7XG4gICAgLy8gICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdhdXRoLnJlZ2lzdGVyJywge1xuICAgIC8vICAgICAgICAgdXJsOiAnL3JlZ2lzdGVyJyxcbiAgICAvLyAgICAgICAgIGNvbXBvbmVudDogJ3JlZ2lzdGVyJ1xuICAgIC8vICAgICB9KTtcbiAgICAvLyB9KTtcbiIsImZ1bmN0aW9uIFJlZ2lzdGVyQ29udHJvbGxlcihBdXRoU2VydmljZSwgJHN0YXRlKSB7XG4gICAgdmFyIGN0cmwgPSB0aGlzO1xuXG4gICAgLy9pbml0aWFsaXplIHVzZXIgZGF0YVxuICAgIGN0cmwuJG9uSW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY3RybC5lcnJvciA9IG51bGw7XG4gICAgICAgIGN0cmwudXNlciA9IHtcbiAgICAgICAgICAgIGVtYWlsOiAnJyxcbiAgICAgICAgICAgIHBhc3N3b3JkOiAnJ1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvL2NyZWF0ZXMgYSBuZXcgdXNlciBhbmQgYWxsb3dzIGFjY2VzcyBpbnRvIHRoZSBhcHBcbiAgICBjdHJsLmNyZWF0ZVVzZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcInVzZXI6XCIsIGV2ZW50KTtcbiAgICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlXG4gICAgICAgICAgICAucmVnaXN0ZXIoZXZlbnQudXNlcilcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgICAgICAgICAgIGN0cmwuZXJyb3IgPSByZWFzb24ubWVzc2FnZTtcbiAgICAgICAgICAgIH0pO1xuICAgIH07XG5cbn1cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbXBvbmVudHMuYXV0aCcpXG4gICAgLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ29udHJvbGxlcicsIFJlZ2lzdGVyQ29udHJvbGxlcik7XG4iLCIvKipcbiAqIEBuZ2RvYyBjb21wb25lbnRcbiAqIEBuYW1lIGNvbXBvbmVudC5hdXRoOnJlc2V0XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIGNvbXBvbmVudCBoYW5kbGVzIHBhc3N3b3JkIHJlc2V0IGFuZCBpcyB0b2dnbGVkIGluIGxvZ2luIGNvbXBvbmVudFxuICpcbiAqL1xuXG52YXIgcmVzZXQgPSB7XG4gICAgdGVtcGxhdGVVcmw6ICcuL3Jlc2V0Lmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdSZXNldENvbnRyb2xsZXInLFxuICAgIGJpbmRpbmdzOiB7XG4gICAgICBvbkxvZ2luOiAnJidcbiAgICB9XG59O1xuXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnY29tcG9uZW50cy5hdXRoJylcbiAgICAuY29tcG9uZW50KCdyZXNldCcsIHJlc2V0KTtcbiAgICAvLyAuY29uZmlnKGZ1bmN0aW9uICgkc3RhdGVQcm92aWRlcikge1xuICAgIC8vICAgICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnYXV0aC5yZXNldCcsIHtcbiAgICAvLyAgICAgICAgIHVybDogJy9yZXNldCcsXG4gICAgLy8gICAgICAgICBjb21wb25lbnQ6ICdyZXNldCdcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gfSk7XG4iLCJmdW5jdGlvbiBSZXNldENvbnRyb2xsZXIoKSB7XG5cbiAgICB2YXIgY3RybCA9IHRoaXM7XG5cbiAgICBjdHJsLiRvbkluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIlJFU0VUIENPTlRST0xMRVIgRklSRURcIilcbiAgICAgICAgLy8gaW5pdGlhbGl6ZSB2YXJpYWJsZXNcbiAgICAgICAgY3RybC51c2VyID0ge307XG4gICAgICAgIC8vIGluaXRpYWxpemUgZnVuY3Rpb25zXG4gICAgICAgIGN0cmwucmVzZXQgPSByZXNldDtcbiAgICB9XG5cbiAgICAvLyBwYXNzd29yZCByZXNldFxuICAgIGZ1bmN0aW9uIHJlc2V0KGVtYWlsKSB7XG4gICAgICAgIGlmIChlbWFpbCkge1xuICAgICAgICAgICAgUGFyc2VcbiAgICAgICAgICAgICAgICAuVXNlclxuICAgICAgICAgICAgICAgIC5yZXF1ZXN0UGFzc3dvcmRSZXNldChlbWFpbClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdBIHBhc3N3b3JkIHJlc2V0IGVtYWlsIGhhcyBiZWVuIHNlbnQgdG8gJyArIGVtYWlsKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KGVyci5jb2RlICsgXCIgXCIgKyBlcnIubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2NvbXBvbmVudHMuYXV0aCcpXG4gICAgLmNvbnRyb2xsZXIoJ1Jlc2V0Q29udHJvbGxlcicsIFJlc2V0Q29udHJvbGxlcik7XG4iLCJhbmd1bGFyLm1vZHVsZSgndGVtcGxhdGVzJywgW10pLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHskdGVtcGxhdGVDYWNoZS5wdXQoJy4vcm9vdC5odG1sJywnPGRpdiBjbGFzcz1cInJvb3RcIj5cXG4gICAgPGRpdiB1aS12aWV3PjwvZGl2PlxcbjwvZGl2PlxcbicpO1xuJHRlbXBsYXRlQ2FjaGUucHV0KCcuL2FwcC5odG1sJywnPGRpdiBjbGFzcz1cInJvb3RcIj5cXG4gICAgPCEtLSA8YXBwLW5hdiB1c2VyPVwiJGN0cmwudXNlclwiIG9uLWxvZ291dD1cIiRjdHJsLmxvZ291dCgpO1wiPjwvYXBwLW5hdj4gLS0+XFxuICAgIDwhLS0gPG1kLXNpZGVuYXYgZmxleC1vcmRlcj1cIjJcIiBtZC1jb21wb25lbnQtaWQ9XCJzaWRlXCIgbWQtd2hpdGVmcmFtZT1cIjNcIiBtZC1kaXNhYmxlLWJhY2tkcm9wIGNsYXNzPVwibWQtc2lkZW5hdi1yaWdodCBtZC1uby1wYWdpbmF0aW9uIGFwcF9fc2lkZW5hdi0taGVpZ2h0IGFwcF9fc2lkZW5hdi0td2lkdGggYXBwX19zaWRlbmF2LS1wb3NpdGlvbiBhcHBfX3NpZGVuYXYtLW92ZXJmbG93LXhcIj5cXG4gICAgICAgIDxkaXYgdWktdmlldz1cInNpZGVcIj48L2Rpdj5cXG4gICAgPC9tZC1zaWRlbmF2PiAtLT5cXG4gICAgPGRpdj5cXG4gICAgICAgIDxkaXYgdWktdmlldz48L2Rpdj5cXG4gICAgPC9kaXY+XFxuPC9kaXY+XFxuJyk7XG4kdGVtcGxhdGVDYWNoZS5wdXQoJy4vYXV0aC5odG1sJywnICA8bWQtY29udGVudCBjbGFzcz1cImJhY2tncm91bmQgaGVpZ2h0LS1mdWxsIHdpZHRoLS1mdWxsXCIgbGF5b3V0PVwiY29sdW1uXCIgbGF5b3V0LWFsaWduPVwiY2VudGVyIGNlbnRlclwiPlxcblxcbiAgICA8ZGl2PlxcbiAgICAgIDxpbWcgc3JjPVwiaW1nL211Z2h1Yl9sb2dvLnBuZ1wiIHdpZHRoPVwiMjAwcHhcIiAvPlxcbiAgICA8L2Rpdj5cXG5cXG4gICAgPGRpdiBjbGFzcz1cIndpZHRoLS1mdWxsIGF1dGgtLWFuaW1hdGlvbiBuZy1lbnRlclwiIHN0eWxlPVwibWFyZ2luLXRvcDogLTMwcHg7XCI+XFxuICAgICAgPG1kLXRhYnMgY2xhc3M9XCJhdXRoX190YWJDb250YWluZXIgd2lkdGgtLWZ1bGwgbWQtbm8tYW5pbWF0aW9uXCIgbWQtY2VudGVyLXRhYnM9XCJ0cnVlXCI+XFxuXFxuICAgICAgICA8bWQtdGFiIGxhYmVsPVwiU1RVREVOVFwiPlxcbiAgICAgICAgICA8bWQtY29udGVudCBjbGFzcz1cImJhY2tncm91bmRcIj5cXG4gICAgICAgICAgICAgIDxsb2dpbiBuZy1pZj1cIiRjdHJsLnNob3dMb2dpblwiIG9uLXJlZ2lzdGVyPVwiJGN0cmwudG9nZ2xlUmVnaXN0ZXIoKVwiIG9uLXJlc2V0PVwiJGN0cmwudG9nZ2xlUmVzZXQoKVwiIHVzZXItdHlwZT1cIlNUVURFTlRcIj48L2xvZ2luPlxcbiAgICAgICAgICAgICAgPHJlZ2lzdGVyIG5nLWlmPVwiJGN0cmwuc2hvd1JlZ2lzdGVyXCIgb24tbG9naW49XCIkY3RybC50b2dnbGVSZWdpc3RlcigpXCIgdXNlci10eXBlPVwiU1RVREVOVFwiPjwvcmVnaXN0ZXI+XFxuICAgICAgICAgICAgICA8cmVzZXQgbmctaWY9XCIkY3RybC5zaG93UmVzZXQ7XCI+PC9yZXNldD5cXG4gICAgICAgICAgPC9tZC1jb250ZW50PlxcbiAgICAgICAgPC9tZC10YWI+XFxuXFxuICAgICAgICA8bWQtdGFiIGxhYmVsPVwiVFVUT1JcIj5cXG4gICAgICAgICAgPG1kLWNvbnRlbnQgY2xhc3M9XCJiYWNrZ3JvdW5kIGF1dGgtLWFuaW1hdGlvbiBuZy1lbnRlclwiPlxcbiAgICAgICAgICAgICAgPGxvZ2luIG5nLWlmPVwiJGN0cmwuc2hvd0xvZ2luXCIgb24tcmVnaXN0ZXI9XCIkY3RybC50b2dnbGVSZWdpc3RlcigpXCIgb24tcmVzZXQ9XCIkY3RybC50b2dnbGVSZXNldCgkZXZlbnQpXCIgdXNlci10eXBlPVwiVFVUT1JcIj48L2xvZ2luPlxcbiAgICAgICAgICAgICAgPHJlZ2lzdGVyIG5nLWlmPVwiJGN0cmwuc2hvd1JlZ2lzdGVyXCIgb24tbG9naW49XCIkY3RybC50b2dnbGVSZWdpc3RlcigpXCIgdXNlci10eXBlPVwiVFVUT1JcIj48L3JlZ2lzdGVyPlxcbiAgICAgICAgICAgICAgPHJlc2V0IG5nLWlmPVwiJGN0cmwuc2hvd1Jlc2V0O1wiPjwvcmVzZXQ+XFxuICAgICAgICAgIDwvbWQtY29udGVudD5cXG4gICAgICAgIDwvbWQtdGFiPlxcblxcbiAgICAgIDwvbWQtdGFicz5cXG4gICAgPC9kaXY+XFxuXFxuICA8L21kLWNvbnRlbnQ+XFxuJyk7XG4kdGVtcGxhdGVDYWNoZS5wdXQoJy4vbWVtb3MuaHRtbCcsJzxkaXY+XFxuICBUaGlzIGlzIHRoZSBhcHAuXFxuPC9kaXY+XFxuJyk7XG4kdGVtcGxhdGVDYWNoZS5wdXQoJy4vYXV0aC1mb3JtLmh0bWwnLCc8Zm9ybSBsYXlvdXQ9XCJjb2x1bW5cIiBsYXlvdXQtYWxpZ249XCJjZW50ZXIgY2VudGVyXCIgbmFtZT1cImF1dGhGb3JtXCIgbm92YWxpZGF0ZSBuZy1zdWJtaXQ9XCIkY3RybC5zdWJtaXRGb3JtKCk7XCI+XFxuICA8bWQtbGlzdCBsYXlvdXQ9XCJjb2x1bW5cIiBsYXlvdXQtYWxpZ249XCJjZW50ZXIgY2VudGVyXCI+XFxuXFxuICAgIDxkaXY+XFxuICAgICAgPG1kLWxpc3QtaXRlbT5cXG4gICAgICAgIDxtZC1pbnB1dC1jb250YWluZXIgbGF5b3V0PVwicm93XCIgbGF5b3V0LWFsaWduPVwiY2VudGVyIGNlbnRlclwiIGNsYXNzPVwiYXV0aF9faW5wdXRcIj5cXG4gICAgICAgICAgPGxhYmVsIHN0eWxlPVwiY29sb3I6ICAjZWFlYWVhOyBmb250LXNpemU6IDEzcHg7IGZvbnQtZmFtaWx5OiBcXCdNb250c2VycmF0XFwnLCBzYW5zLXNlcmlmOyBwYWRkaW5nOiA1cHggMHB4IDBweCAyMHB4XCI+PGkgc3R5bGU9XCJ2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBjb2xvcjojZWFlYWVhOyBtYXJnaW46MHB4IDRweCAxcHggNHB4XCIgY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBtZC0xOFwiPmVtYWlsPC9pPkVNQUlMPC9sYWJlbD5cXG4gICAgICAgICAgPGlucHV0IGNsYXNzPVwiYXV0aF9faW5wdXQtLXN0eWxlIGF1dGhfX2lucHV0LS1oZWlnaHRcIiB0eXBlPVwiZW1haWxcIiBuYW1lPVwiZW1haWxcIiBuZy1tb2RlbD1cIiRjdHJsLnVzZXIuZW1haWxcIiBhdXRvY29tcGxldGU9XCJvZmZcIiAvPlxcbiAgICAgICAgPC9tZC1pbnB1dC1jb250YWluZXI+XFxuICAgICAgPC9tZC1saXN0LWl0ZW0+XFxuICAgIDwvZGl2PlxcblxcbiAgICA8ZGl2PlxcbiAgICAgIDxtZC1saXN0LWl0ZW0gY2xhc3M9XCJhdXRoX19saXN0SXRlbS0tbWFyZ2luVG9wXCI+XFxuICAgICAgICA8bWQtaW5wdXQtY29udGFpbmVyIGxheW91dD1cInJvd1wiIGxheW91dC1hbGlnbj1cImNlbnRlciBjZW50ZXJcIiBjbGFzcz1cImF1dGhfX2lucHV0XCI+XFxuICAgICAgICAgIDxsYWJlbCBzdHlsZT1cImNvbG9yOiAgI2VhZWFlYTsgZm9udC1zaXplOiAxM3B4OyBmb250LWZhbWlseTogXFwnTW9udHNlcnJhdFxcJywgc2Fucy1zZXJpZjsgcGFkZGluZzogNXB4IDBweCAwcHggMjBweFwiPjxpIHN0eWxlPVwidmVydGljYWwtYWxpZ246IG1pZGRsZTsgY29sb3I6I2VhZWFlYTsgbWFyZ2luOjBweCA0cHhcIiBjbGFzcz1cIm1hdGVyaWFsLWljb25zIG1kLTE4XCI+bG9jazwvaT5QQVNTV09SRDwvbGFiZWw+XFxuICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImF1dGhfX2lucHV0LS1zdHlsZSBhdXRoX19pbnB1dC0taGVpZ2h0XCIgdHlwZT1cInBhc3N3b3JkXCIgbmFtZT1cInBhc3N3b3JkXCIgbmctbW9kZWw9XCIkY3RybC51c2VyLnBhc3N3b3JkXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIgLz5cXG4gICAgICAgIDwvbWQtaW5wdXQtY29udGFpbmVyPlxcbiAgICAgICAgPHAgbmctaWY9XCIkY3RybC5idXR0b24gPT09IFxcJ0xvZ2luXFwnXCIgbmctY2xpY2s9XCIkY3RybC5vblJlc2V0KCRldmVudClcIiBjbGFzcz1cImF1dGhfX2ZvcmdvdFwiPj88L3A+XFxuICAgICAgPC9tZC1saXN0LWl0ZW0+XFxuICAgIDwvZGl2PlxcblxcbiAgICA8ZGl2PlxcbiAgICAgIDxtZC1saXN0LWl0ZW0gY2xhc3M9XCJhdXRoX19saXN0SXRlbS0tbWFyZ2luVG9wXCI+XFxuICAgICAgICA8bWQtYnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBuZy1kaXNhYmxlZD1cImF1dGhGb3JtLiRpbnZhbGlkXCIgY2xhc3M9XCJtZC1yYWlzZWQgYXV0aF9fYnV0dG9uIGF1dGhfX2lucHV0LS1oZWlnaHRcIj5cXG4gICAgICAgICAgPGgxIGNsYXNzPVwiYXV0aF9fYnV0dG9uVGV4dFwiPnt7ICRjdHJsLmJ1dHRvbiB9fSBhcyBhIHt7ICRjdHJsLnVzZXJUeXBlIH19PC9oMT5cXG4gICAgICAgIDwvbWQtYnV0dG9uPlxcbiAgICAgIDwvbWQtbGlzdC1pdGVtPlxcbiAgICA8L2Rpdj5cXG5cXG5cXG4gIDwvbWQtbGlzdD5cXG48L2Zvcm0+XFxuJyk7XG4kdGVtcGxhdGVDYWNoZS5wdXQoJy4vbG9naW4uaHRtbCcsJzxkaXYgbGF5b3V0PVwiY29sdW1uXCIgbGF5b3V0LWFsaWduPVwiY2VudGVyXCIgY2xhc3M9XCJhdXRoLS1hbmltYXRpb25cIj5cXG4gICAgPGRpdj5cXG4gICAgICAgIDxhdXRoLWZvcm0gdXNlcj1cIiRjdHJsLnVzZXJcIiB1c2VyLXR5cGU9XCIkY3RybC51c2VyVHlwZVwiIGJ1dHRvbj1cIkxvZ2luXCIgb24tc3VibWl0PVwiJGN0cmwubG9naW5Vc2VyKCRldmVudCk7XCIgb24tcmVzZXQ9XCIkY3RybC5vblJlc2V0KHskZXZlbnQ6ICRjdHJsLnVzZXIuZW1haWx9KVwiPlxcbiAgICAgICAgPC9hdXRoLWZvcm0+XFxuICAgIDwvZGl2PlxcbiAgICA8Y2VudGVyPlxcbiAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICA8YSBuZy1jbGljaz1cIiRjdHJsLm9uUmVnaXN0ZXIoJGV2ZW50KVwiIGNsYXNzPVwiYXV0aF9fdHJhbnNcIj5cXG4gICAgICBEb25cXCd0IGhhdmUgYW4gYWNjb3VudD8gQ3JlYXRlIG9uZSBoZXJlLlxcbiAgICA8L2E+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgPC9jZW50ZXI+XFxuPC9kaXY+XFxuJyk7XG4kdGVtcGxhdGVDYWNoZS5wdXQoJy4vcmVnaXN0ZXIuaHRtbCcsJzxkaXYgbGF5b3V0PVwiY29sdW1uXCIgbGF5b3V0LWFsaWduPVwiY2VudGVyXCIgY2xhc3M9XCJhdXRoLS1hbmltYXRpb25cIj5cXG4gICAgPGRpdj5cXG4gICAgICAgIDxhdXRoLWZvcm0gdXNlcj1cIiRjdHJsLnVzZXJcIiB1c2VyLXR5cGU9XCIkY3RybC51c2VyVHlwZVwiIG1lc3NhZ2U9XCJ7eyAkY3RybC5lcnJvciB9fVwiIGJ1dHRvbj1cIlJlZ2lzdGVyXCIgb24tc3VibWl0PVwiJGN0cmwuY3JlYXRlVXNlcigkZXZlbnQpO1wiPlxcbiAgICAgICAgPC9hdXRoLWZvcm0+XFxuICAgIDwvZGl2PlxcbiAgICA8Y2VudGVyPlxcbiAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICA8YSBuZy1jbGljaz1cIiRjdHJsLm9uTG9naW4oJGV2ZW50KVwiIGNsYXNzPVwiYXV0aF9fdHJhbnNcIj5BbHJlYWR5IGhhdmUgYW4gYWNjb3VudD8gTG9naW4gaGVyZS48L2E+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgPC9jZW50ZXI+XFxuPC9kaXY+XFxuJyk7XG4kdGVtcGxhdGVDYWNoZS5wdXQoJy4vcmVzZXQuaHRtbCcsJzwhLS0gPGRpdiBsYXlvdXQ9XCJjb2x1bW5cIiBsYXlvdXQtYWxpZ249XCJjZW50ZXJcIiBjbGFzcz1cImF1dGgtLWFuaW1hdGlvblwiPlxcbiAgPGZvcm0gd2lkdGg9XCIxMDAlXCIgbmFtZT1cImF1dGhGb3JtXCIgbm92YWxpZGF0ZSBuZy1zdWJtaXQ9XCIkY3RybC5yZXNldCgkY3RybC51c2VyLmVtYWlsKVwiPlxcbiAgICA8ZGl2IHdpZHRoPVwiMTAwJVwiIGxheW91dD1cImNvbHVtblwiIGxheW91dC1hbGlnbj1cImNlbnRlciBjZW50ZXJcIj5cXG4gICAgICA8ZGl2IHN0eWxlPVwibWluLXdpZHRoOjI1JVwiPlxcbiAgICAgICAgPG1kLWxpc3Q+XFxuICAgICAgICAgIDxtZC1saXN0LWl0ZW0+XFxuICAgICAgICAgICAgPG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCIgbGF5b3V0LWZpbGw+XFxuICAgICAgICAgICAgICA8bGFiZWw+RW1haWw8L2xhYmVsPlxcbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIG5hbWU9XCJlbWFpbFwiIG5nLW1vZGVsPVwiJGN0cmwudXNlci5lbWFpbFwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIC8+XFxuICAgICAgICAgICAgPC9tZC1pbnB1dC1jb250YWluZXI+XFxuICAgICAgICAgIDwvbWQtbGlzdC1pdGVtPlxcbiAgICAgICAgPC9tZC1saXN0PlxcbiAgICAgIDwvZGl2PlxcbiAgICAgIDxkaXY+XFxuICAgICAgICA8bWQtYnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBuZy1kaXNhYmxlZD1cImF1dGhGb3JtLiRpbnZhbGlkXCIgY2xhc3M9XCJtZC1yYWlzZWQgYXV0aF9fYnV0dG9uXCI+XFxuICAgICAgICAgIDxoMSBjbGFzcz1cImF1dGhfX2J1dHRvblRleHRcIj5SRVNFVDwvaDE+XFxuICAgICAgICA8L21kLWJ1dHRvbj5cXG4gICAgICA8L2Rpdj5cXG4gICAgPC9kaXY+XFxuICA8L2Zvcm0+XFxuICA8Y2VudGVyPlxcbiAgICA8ZGl2PlxcbiAgICAgIDxhIG5nLWNsaWNrPVwiJGN0cmwub25Mb2dpbigkZXZlbnQpXCIgY2xhc3M9XCJhdXRoX190cmFuc1wiPk9yIGxvZ2luIHdpdGggYW4gZXhpc3RpbmcgYWNjb3VudC48L2E+XFxuICAgIDwvZGl2PlxcbiAgPC9jZW50ZXI+XFxuPC9kaXY+IC0tPlxcbjxkaXYgbGF5b3V0PVwiY29sdW1uXCIgbGF5b3V0LWFsaWduPVwiY2VudGVyXCIgY2xhc3M9XCJhdXRoLS1hbmltYXRpb25cIj5cXG4gIDxkaXY+XFxuICAgIDxmb3JtIGxheW91dD1cImNvbHVtblwiIGxheW91dC1hbGlnbj1cImNlbnRlciBjZW50ZXJcIiBuYW1lPVwiYXV0aEZvcm1cIiBub3ZhbGlkYXRlIG5nLXN1Ym1pdD1cIiRjdHJsLnN1Ym1pdEZvcm0oKTtcIj5cXG4gICAgICA8bWQtbGlzdCBsYXlvdXQ9XCJjb2x1bW5cIiBsYXlvdXQtYWxpZ249XCJjZW50ZXIgY2VudGVyXCI+XFxuXFxuICAgICAgICA8ZGl2PlxcbiAgICAgICAgICA8bWQtbGlzdC1pdGVtPlxcbiAgICAgICAgICAgIDxtZC1pbnB1dC1jb250YWluZXIgbGF5b3V0PVwicm93XCIgbGF5b3V0LWFsaWduPVwiY2VudGVyIGNlbnRlclwiIGNsYXNzPVwiYXV0aF9faW5wdXRcIj5cXG4gICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT1cImNvbG9yOiAgI2VhZWFlYTsgZm9udC1zaXplOiAxM3B4OyBmb250LWZhbWlseTogXFwnTW9udHNlcnJhdFxcJywgc2Fucy1zZXJpZjsgcGFkZGluZzogNXB4IDBweCAwcHggMjBweFwiPjxpIHN0eWxlPVwidmVydGljYWwtYWxpZ246IG1pZGRsZTsgY29sb3I6I2VhZWFlYTsgbWFyZ2luOjBweCA0cHggMXB4IDRweFwiIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgbWQtMThcIj5lbWFpbDwvaT57eyAkY3RybC51c2VyVHlwZSB9fSBFTUFJTDwvbGFiZWw+XFxuICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJhdXRoX19pbnB1dC0tc3R5bGUgYXV0aF9faW5wdXQtLWhlaWdodFwiIHR5cGU9XCJlbWFpbFwiIG5hbWU9XCJlbWFpbFwiIG5nLW1vZGVsPVwiJGN0cmwudXNlci5lbWFpbFwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIC8+XFxuICAgICAgICAgICAgPC9tZC1pbnB1dC1jb250YWluZXI+XFxuICAgICAgICAgIDwvbWQtbGlzdC1pdGVtPlxcbiAgICAgICAgPC9kaXY+XFxuXFxuICAgICAgICA8ZGl2PlxcbiAgICAgICAgICA8bWQtbGlzdC1pdGVtIGNsYXNzPVwiYXV0aF9fbGlzdEl0ZW0tLW1hcmdpblRvcFwiPlxcbiAgICAgICAgICAgIDxtZC1idXR0b24gdHlwZT1cInN1Ym1pdFwiIG5nLWRpc2FibGVkPVwiYXV0aEZvcm0uJGludmFsaWRcIiBjbGFzcz1cIm1kLXJhaXNlZCBhdXRoX19idXR0b24gYXV0aF9faW5wdXQtLWhlaWdodFwiPlxcbiAgICAgICAgICAgICAgPGgxIGNsYXNzPVwiYXV0aF9fYnV0dG9uVGV4dFwiPlJFU0VUPC9oMT5cXG4gICAgICAgICAgICA8L21kLWJ1dHRvbj5cXG4gICAgICAgICAgPC9tZC1saXN0LWl0ZW0+XFxuICAgICAgICA8L2Rpdj5cXG5cXG4gICAgICA8L21kLWxpc3Q+XFxuICAgIDwvZm9ybT5cXG4gIDwvZGl2PlxcbiAgPGNlbnRlcj5cXG4gICAgPGRpdj5cXG4gICAgICA8YSBuZy1jbGljaz1cIiRjdHJsLm9uTG9naW4oJGV2ZW50KVwiIGNsYXNzPVwiYXV0aF9fdHJhbnNcIj5PciBsb2dpbiB3aXRoIGFuIGV4aXN0aW5nIGFjY291bnQuPC9hPlxcbiAgICA8L2Rpdj5cXG4gIDwvY2VudGVyPlxcbjwvZGl2PlxcbicpO31dKTsiXX0=
