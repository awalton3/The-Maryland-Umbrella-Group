(function(angular){
'use strict';
angular
    .module('root', [
    'common',
    'components',
    'templates'
  ]);
})(window.angular);
(function(angular){
'use strict';
angular
    .module('components', [
    'components.auth',
    'components.memos',
    'components.student',
    'components.uploads',
    'components.hours'
  ])
})(window.angular);
(function(angular){
'use strict';
angular
  .module('common', [
    'ui.router',
    'ngMaterial',
    'ngMessages',
  ]);
})(window.angular);
(function(angular){
'use strict';
angular
  .module('common', [
    'ui.router',
    'ngMaterial',
    'ngMessages',
  ]);
})(window.angular);
(function(angular){
'use strict';
/**
 *
 * @ngdoc object
 * @name components.auth
 *
 * @requires ui.router,ngParse,ngMaterial,ngMessages
 *
 * @description
 *
 * This is the auth module. It includes login, register, and reset components for auth feature.
 *
 **/

angular
  .module('components.auth', [
    'ui.router',
    'ngParse',
    'ngMaterial',
    'ngMessages'
  ])
  .config(["ParseProvider", function(ParseProvider) {
    var MY_PARSE_APP_ID = 'uDzN7E7NYIbwdzKLUwNBtDtGfxyxrrBo3C6xGri3';
    var MY_PARSE_JS_KEY = '0VcWEWBLIwEcExM2Nz3TziSGjKiMsoU7SNjI5RPA';
    ParseProvider.initialize(MY_PARSE_APP_ID, MY_PARSE_JS_KEY);
    ParseProvider.serverURL = 'https://parseapi.back4app.com/';

  }])
  .run(["$transitions", "$state", "AuthService", "$rootScope", function($transitions, $state, AuthService, $rootScope) {
    if (Parse.User.current() !== null) {
      $rootScope.currentUser = Parse.User.current();
    }
    $transitions.onStart({
      to: function(state) {
        return !!(state.data && state.data.requiredAuth);
      }
    }, function() {
      return AuthService
        .requireAuthentication()
        .catch(function() {
          return $state.target('auth');
        });
    });
    $transitions.onStart({
      to: 'auth'
    }, function() {
      if (AuthService.isAuthenticated()) {
        if ($rootScope.currentUser.attributes.type === 'STUDENT') {
          return $state.go('student-app');
        } else {
          return $state.go('tutor-app');
        }
      }
    });
  }]);
})(window.angular);
(function(angular){
'use strict';
angular
    .module('components.hours', [
    'ui.router'
  ]);
})(window.angular);
(function(angular){
'use strict';
angular
    .module('components.memos', [
    'ui.router'
  ]);
})(window.angular);
(function(angular){
'use strict';
angular
    .module('components.student', [
    'ui.router'
  ]);
})(window.angular);
(function(angular){
'use strict';
angular
    .module('components.uploads', [
    'ui.router'
  ]);
})(window.angular);
(function(angular){
'use strict';
var root = {
    templateUrl: './root.html'
};

angular
    .module('root')
    .component('root', root);
})(window.angular);
(function(angular){
'use strict';
var appNav = {
  templateUrl: './app-nav.html',
  controller: 'AppNavController',
  bindings: {
    title: '@',
    leftIcon: '@',
    rightIcon: '@'
  }
}

angular
  .module('common')
  .component('appNav', appNav);
})(window.angular);
(function(angular){
'use strict';
AppNavController.$inject = ["$mdSidenav"];
function AppNavController($mdSidenav) {

  var ctrl = this;
  ctrl.$onInit = function() {
    //define variables
    ctrl.toggleLeft = buildToggler('left');
    ctrl.toggleRight = buildToggler('right');

    //define functions
    ctrl.buildToggler = buildToggler;
    ctrl.toggleNavs = toggleNavs;
  }

  function buildToggler(componentId) {
    return function() {
      $mdSidenav(componentId).toggle();
    };
  }

  function toggleNavs(componentId) {
    ctrl.isRightNavLocked = !ctrl.isRightNavLocked;
    buildToggler(componentId);
  }
}

angular
  .module('common')
  .controller('AppNavController', AppNavController);
})(window.angular);
(function(angular){
'use strict';
var appSidenav = {
  templateUrl: './app-sidenav.html',
  controller: 'AppSidenavController'
};

angular
  .module('common')
  .component('appSidenav', appSidenav);
})(window.angular);
(function(angular){
'use strict';
AppSidenavController.$inject = ["AuthService", "$state", "$rootScope"];
function AppSidenavController(AuthService, $state, $rootScope) {
  var ctrl = this;

  ctrl.$onInit = function() {
    //define variables
    ctrl.user = $rootScope.currentUser;
    //define functions
    ctrl.logout = logout;
    ctrl.goToHourLog = goToHourLog;
    ctrl.goToUploads = goToUploads;
  }

  function logout() {
    AuthService.logout()
      .then(() => {
        $state.go('auth');
      });
  };

  function goToHourLog() {
    $state.go('hours')
  }

  function goToUploads() {
    $state.go('uploads')
  }

}

angular
  .module('common')
  .controller('AppSidenavController', AppSidenavController);
})(window.angular);
(function(angular){
'use strict';
class StudentModel {
    constructor(Parse) {
        this.Parse = Parse;
        this.data = {};
        this.name = 'Student';
        this.fields = [
            'user',
            'tutors',
            'subjects'
        ];
    }

    New(obj) {
        if (angular.isUndefined(obj)) {
            let parseObject = new this.Parse.Object(this.name)
            this.Parse.defineAttributes(parseObject, this.fields);
            return Promise.resolve(parseObject);
        } else {
            this.Parse.defineAttributes(obj, this.fields);
            return obj;
        }
    }

    getById(id) {
        return new this.Parse.Query(this.New()).get(id)
            .then(result => {
                this.Parse.defineAttributes(result, this.fields);
                this.data = result;
                return Promise.resolve(result);
            }).catch(error => Promise.reject(error));
    }
}

angular
    .module('common')
    .service('StudentModel', StudentModel);
})(window.angular);
(function(angular){
'use strict';
class TutorModel {
    constructor(Parse) {
        this.Parse = Parse;
        this.data = {};
        this.name = 'Tutor';
        this.fields = [
            'user',
            'students',
            'subjects'
        ];
    }

    New(obj) {
        if (angular.isUndefined(obj)) {
            let parseObject = new this.Parse.Object(this.name)
            this.Parse.defineAttributes(parseObject, this.fields);
            return Promise.resolve(parseObject);
        } else {
            this.Parse.defineAttributes(obj, this.fields);
            return obj;
        }
    }

    getById(id) {
        return new this.Parse.Query(this.New()).get(id)
            .then(result => {
                this.Parse.defineAttributes(result, this.fields);
                this.data = result;
                return Promise.resolve(result);
            }).catch(error => Promise.reject(error));
    }
}

angular
    .module('common')
    .service('TutorModel', TutorModel);
})(window.angular);
(function(angular){
'use strict';
class UserModel {
    constructor(Parse) {
        this.Parse = Parse;
        this.data = {};
        this.name = 'User';
        this.fields = [
            'lastname',
            'emailVerified',
            'data',
            'type',
            'authData',
            'username',
            'firstname',
            'password',
            'email'
        ];
    }
    New(obj) {
        if (angular.isUndefined(obj)) {
            let parseObject = new this.Parse.Object(this.name)
            this.Parse.defineAttributes(parseObject, this.fields);
            return parseObject;
        } else {
            this.Parse.defineAttributes(obj, this.fields);
            return obj;
        }
    }
    getById(id) {
        return new this.Parse.Query(this.New()).get(id)
            .then(result => {
                this.Parse.defineAttributes(result, this.fields);
                this.data = result;
                return Promise.resolve(result);
            }).catch(error => Promise.reject(error));
    }
}

angular
    .module('common')
    .service('UserModel', UserModel);
})(window.angular);
(function(angular){
'use strict';
var studentApp = {
  templateUrl: './student-app.html',
  controller: 'StudentAppController'
};

angular
  .module('common')
  .component('studentApp', studentApp)
  .config(["$stateProvider", function($stateProvider) {
    $stateProvider
      .state('student-app', {
        redirectTo: 'student',
        url: '/',
        data: {
          requiredAuth: true
        },
        component: 'studentApp',
        resolve: {
          authorization: ['$q', '$rootScope', function($q, $rootScope) {
            var deferred = $q.defer();
            if ($rootScope.currentUser !== null) {
              if ($rootScope.currentUser.attributes.type === 'STUDENT') {
                deferred.resolve();
              } else {
                deferred.reject('You are not authorized to visit this page');
              }
            } else {
              deferred.resolve();
            }
            return deferred.promise;
          }]
        }
      })
  }]);
})(window.angular);
(function(angular){
'use strict';
StudentAppController.$inject = ["AuthService", "$state"];
function StudentAppController(AuthService, $state) {
    var ctrl = this;
    ctrl.user = AuthService.getUser();
    ctrl.logout = function () {
        AuthService.logout()
            .then(function () {
                $state.go('auth');
            });
    };
}

angular
    .module('common')
    .controller('StudentAppController', StudentAppController);
})(window.angular);
(function(angular){
'use strict';
init.$inject = ["$rootScope", "$uiRouter", "$mdSidenav"];
function init($rootScope, $uiRouter, $mdSidenav) {
    var Visualizer = window['ui-router-visualizer'].Visualizer;
    var pluginInstance = $uiRouter.plugin(Visualizer);

    $rootScope.toggleMenu = toggleMenu;

    function toggleMenu(navId) {
        console.log('toggle sidenav: ' + navId);
        $mdSidenav(navId)
            .toggle();
    }
}

angular
    .module('common')
    .run(init)
})(window.angular);
(function(angular){
'use strict';
var tutorApp = {
  templateUrl: './tutor-app.html',
  controller: 'TutorAppController'
};

angular
  .module('common')
  .component('tutorApp', tutorApp)
  .config(["$stateProvider", function($stateProvider) {
    $stateProvider
      .state('tutor-app', {
        redirectTo: 'uploads',
        url: '/',
        data: {
          requiredAuth: true
        },
        component: 'tutorApp',
        resolve: {
          authorization: ['$q', '$rootScope', function($q, $rootScope) {
            var deferred = $q.defer();
            if ($rootScope.currentUser !== null) {
              if ($rootScope.currentUser.attributes.type === 'TUTOR') {
                deferred.resolve();
              } else {
                deferred.reject('You are not authorized to visit this page');
              }
            } else {
              deferred.resolve();
            }
            return deferred.promise;
          }]
        }
      })
  }]);
})(window.angular);
(function(angular){
'use strict';
TutorAppController.$inject = ["AuthService", "$state"];
function TutorAppController(AuthService, $state) {
    var ctrl = this;
    ctrl.user = AuthService.getUser();
    ctrl.logout = function () {
        AuthService.logout()
            .then(function () {
                $state.go('auth');
            });
    };
}

angular
    .module('common')
    .controller('TutorAppController', TutorAppController);
})(window.angular);
(function(angular){
'use strict';
init.$inject = ["$rootScope", "$uiRouter", "$mdSidenav"];
function init($rootScope, $uiRouter, $mdSidenav) {
    var Visualizer = window['ui-router-visualizer'].Visualizer;
    var pluginInstance = $uiRouter.plugin(Visualizer);

    $rootScope.toggleMenu = toggleMenu;

    function toggleMenu(navId) {
        console.log('toggle sidenav: ' + navId);
        $mdSidenav(navId)
            .toggle();
    }
}

angular
    .module('common')
    .run(init)
})(window.angular);
(function(angular){
'use strict';
var auth = {
    templateUrl: './auth.html',
    controller: 'AuthController'
};

angular
    .module('components.auth')
    .component('auth', auth)
    .config(["$stateProvider", "$urlRouterProvider", function ($stateProvider, $urlRouterProvider) {
        $stateProvider
            .state('auth', {
                url: '/auth',
                component: 'auth'
            });
         $urlRouterProvider.otherwise('/auth');
    }]);
})(window.angular);
(function(angular){
'use strict';
AuthController.$inject = ["AuthService"];
function AuthController(AuthService) {
  var ctrl = this;

  ctrl.$onInit = function() {
    // define variables
    ctrl.showRegister = false;
    ctrl.showReset = false;
    ctrl.showLogin = true;

    // define functions
    ctrl.toggleRegister = toggleRegister;
    ctrl.toggleReset = toggleReset;
    ctrl.toggleLogin = toggleLogin;
    ctrl.register = register;
    ctrl.login = login;
    ctrl.reset = reset;
  }

  function toggleRegister() {
    ctrl.showRegister = !ctrl.showRegister;
    ctrl.showLogin = !ctrl.showLogin;
  }

  function toggleReset(event) {
    ctrl.userEmail = event.email;
    ctrl.showReset = !ctrl.showReset;
    ctrl.showLogin = !ctrl.showLogin;
  }

  function toggleLogin() {
    ctrl.showLogin = !ctrl.showLogin;
    ctrl.showReset = !ctrl.showReset;
  }

  function login(event) {
    return AuthService.login(event.user)
  }

  function register(event) {

    return AuthService.register(event.user)
      .signUp(null)
      .then(newUser => {
        console.log(newUser);
        let user = newUser;
        alert("A verfication email has been sent to " + newUser.email)
        return AuthService.logout()
          .then(() => {
            toggleRegister() //shows login view
            return AuthService.addByType(user) //sends user info to Student or Tutor parse class
          })
          .catch(error => alert(error))
      });
  }

  function reset(email) {
    if (email) {
      Parse.User
        .requestPasswordReset(email)
        .then(() => {
          alert('A password reset email has been sent to ' + email);
          toggleLogin();
        })
        .catch(err => {
          alert(err.code + " " + err.message);
        });
    }
  }
}

angular
  .module('components.auth')
  .controller('AuthController', AuthController);
})(window.angular);
(function(angular){
'use strict';
/**
 * @ngdoc service
 * @name components.auth:AuthService
 *
 * @description Handles authentication for app
 */

AuthService.$inject = ["Parse", "$state", "$rootScope", "StudentModel", "TutorModel"];
function AuthService(Parse, $state, $rootScope, StudentModel, TutorModel) {
  var auth = new Parse.User(); // creates a new user in Parse
  var currentUser = null; //holds info about current user

  /**
   * @ngdoc method
   * @name AuthService#storeAuthData
   * @methodOf components.auth:AuthService
   * @param {object} obj Parse user object
   * @returns {object} returns currentUser object
   */

  function storeAuthData(response) {
    currentUser = response;
    return currentUser;
  }

  /**
   * @ngdoc method
   * @name AuthService#clearAuthData
   * @methodOf components.auth:AuthService
   * @returns {object} returns a blank user object
   */

  function clearAuthData() {
    currentUser = Parse.User.current(); // this will now be null
    return currentUser;
  }

  /**
   * @ngdoc method
   * @name AuthService#login
   * @methodOf components.auth:AuthService
   * @param {object} obj user data from auth-form
   * @returns {object} returns the current user object
   */

  this.login = function(user) {
    let userType = user.type
    return Parse.User
      .logIn(user.email, user.password)
      .then(user => {
        if (user.attributes.emailVerified && user.attributes.type === userType) {
          storeAuthData()
          $rootScope.currentUser = user;
          if (userType === 'STUDENT') {
            $state.go('student-app');
          } else {
            $state.go('tutor-app');
          }
        } else {
          this.logout()
            .then(() => {
              alert('Please verify email address or ensure you are logging in as the correct user type.');
            })
        }
      })
      .catch(error => alert(error))
  };

  /**
   * @ngdoc method
   * @name AuthService#register
   * @methodOf components.auth:AuthService
   * @param {object} obj user data from auth-form
   * @returns {object} returns the current user object
   */

  this.register = function(user) {
    auth.set("username", user.email);
    auth.set("firstname", user.firstname);
    auth.set("lastname", user.lastname);
    auth.set("password", user.password);
    auth.set("email", user.email);
    auth.set("type", user.type)
    return auth

  };

  /**
   * @ngdoc method
   * @name AuthService#addByType
   * @methodOf components.auth:AuthService
   * @param {object} obj user data from auth-form
   * @returns {object} returns the new user object and uploads to corresponding parse class
   */

  this.addByType = function(user) {
    console.log(user);
    if (user.attributes.type === 'STUDENT') {
      return StudentModel.New()
        .then(newStudentObject => {
          newStudentObject.set("user", user);
          newStudentObject.save()
            .then(newStudentObject => {
              Promise.resolve(console.log(newStudentObject.id));
            }).catch(error => console.log(error))
        })
    } else if (user.attributes.type === 'TUTOR') {
      return TutorModel.New()
        .then(newTutorObject => {
          newTutorObject.set('user', user);
          newTutorObject.save()
            .then(newTutorObject => {
              Promise.resolve(console.log(newTutorObject.id));
            }).catch(error => console.log(error))
        })
    }
  }

  /**
   * @ngdoc method
   * @name AuthService#logout
   * @methodOf components.auth:AuthService
   * @returns {object} returns an empty user object
   */

  this.logout = function() {
    return Parse.User.logOut()
      .then(clearAuthData);
  };

  /**
   * @ngdoc method
   * @name AuthService#requireAuthentication
   * @methodOf components.auth:AuthService
   * @returns {promise} returns resolve or reject based on user authentication
   */

  this.requireAuthentication = function() {
    return new Promise(function(resolve, reject) {
      if (!!Parse.User.current() && Parse.User.current()
        .authenticated()) {
        resolve();
      } else {
        reject();
      }
    });
  }

  /**
   * @ngdoc method
   * @name AuthService#isAuthenticated
   * @methodOf components.auth:AuthService
   * @returns {boolean} returns whether user is authenticated based on sessionStorage
   */

  this.isAuthenticated = function() {
    return !!(Parse.User.current() && Parse.User.current()
      .authenticated());
  };

  /**
   * @ngdoc method
   * @name AuthService#getUser
   * @methodOf components.auth:AuthService
   * @returns {object} returns currentUser sessionStorage object
   */

  this.getUser = function() {
    if (auth) {
      return auth;
    }
  };

};

angular
  .module('components.auth')
  .service('AuthService', AuthService);
})(window.angular);
(function(angular){
'use strict';
var hours = {
  templateUrl: './hours.html',
  controller: 'HoursController',
  bindings: {}
}

angular
  .module('components.hours')
  .component('hours', hours)
  .config(["$stateProvider", function($stateProvider) {
    $stateProvider.state('hours', {
      parent: 'tutor-app',
      url: 'tutor/hours',
      component: 'hours'
    })
  }]);
})(window.angular);
(function(angular){
'use strict';
HoursController.$inject = ["$mdSidenav", "$rootScope"];
function HoursController($mdSidenav, $rootScope) {
  var ctrl = this;

  ctrl.$onInit = function() {
    //define variables
    ctrl.user = $rootScope.currentUser;

    //define functions

  }
}

angular
  .module('components.hours')
  .controller('HoursController', HoursController);
})(window.angular);
(function(angular){
'use strict';
var memos = {
    templateUrl: './memos.html',
    controller: 'MemosController',
    bindings: {}
}

angular
    .module('components.memos')
    .component('memos', memos)
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider.state('memos', {
            parent: 'app',
            url: 'memos',
            component: 'memos'
        })
    }]);
})(window.angular);
(function(angular){
'use strict';
MemosController.$inject = ["$state"];
function MemosController($state) {

    var ctrl = this;
    ctrl.$onInit = function () {

    }

}


angular
    .module('components.memos')
    .controller('MemosController', MemosController);
})(window.angular);
(function(angular){
'use strict';
var student = {
  templateUrl: './student.html',
  controller: 'StudentController',
  bindings: {}
}

angular
  .module('components.student')
  .component('student', student)
  .config(["$stateProvider", function($stateProvider) {
    $stateProvider.state('student', {
      parent: 'student-app',
      url: 'student',
      component: 'student'
    })
  }]);
})(window.angular);
(function(angular){
'use strict';
function StudentController() {

    var ctrl = this;
    ctrl.$onInit = function () {

    }

}

angular
    .module('components.student')
    .controller('StudentController', StudentController);
})(window.angular);
(function(angular){
'use strict';
var uploads = {
  templateUrl: './uploads.html',
  controller: 'UploadsController',
  bindings: {}
}

angular
  .module('components.uploads')
  .component('uploads', uploads)
  .config(["$stateProvider", function($stateProvider) {
    $stateProvider.state('uploads', {
      parent: 'tutor-app',
      url: 'tutor/uploads',
      component: 'uploads'
    })
  }]);
})(window.angular);
(function(angular){
'use strict';
UploadsController.$inject = ["$mdSidenav", "$rootScope"];
function UploadsController($mdSidenav, $rootScope) {

  var ctrl = this;
  ctrl.$onInit = function() {
    //define variables
    ctrl.user = $rootScope.currentUser;

    //define functions
    console.log($rootScope.currentUser);
  }
}

angular
  .module('components.uploads')
  .controller('UploadsController', UploadsController);
})(window.angular);
(function(angular){
'use strict';
var authForm = {
    bindings: {
        user: '<',
        userType: '<',
        button: '@',
        message: '@',
        onSubmit: '&',
        onReset: '&'
    },
    templateUrl: './auth-form.html',
    controller: 'AuthFormController'
};

angular
    .module('components.auth')
    .component('authForm', authForm);
})(window.angular);
(function(angular){
'use strict';
function AuthFormController() {
  
  var ctrl = this;

  ctrl.$onInit = function() {
    ctrl.submitForm = submitForm;
    ctrl.reset = reset;
  }

  ctrl.$onChanges = function(changes) {
    if (changes.user) {
      ctrl.user = angular.copy(ctrl.user);
    }
  };

// function passes click event with user object to login component
  function submitForm() {
    ctrl.onSubmit({
      $event: {
        user: ctrl.user
      }
    });
  };

// function passes click event with user email to login component
  function reset() {
    ctrl.onReset({
      $event: {
        email: ctrl.user.email
      }
    });
  };

}

angular
  .module('components.auth')
  .controller('AuthFormController', AuthFormController);
})(window.angular);
(function(angular){
'use strict';
var register = {
    templateUrl: './register.html',
    controller: 'RegisterController',
    bindings: {
      userType: '@',
      onLogin: '&',
      onRegister: '&'
    }
};

angular
    .module('components.auth')
    .component('register', register);
})(window.angular);
(function(angular){
'use strict';
function RegisterController() {
  var ctrl = this;

  ctrl.$onInit = function() {
    //define variables
    ctrl.error = null;
    ctrl.user = {
      email: '',
      password: '',
      type: ctrl.userType
    };
    ///define functions
    ctrl.register = register;
  };

  function register(event) {
    ctrl.onRegister({
      $event: {
        user: event.user
      }
    });
  };
}

angular
  .module('components.auth')
  .controller('RegisterController', RegisterController);
})(window.angular);
(function(angular){
'use strict';
var login = {
    templateUrl: './login.html',
    controller: 'LoginController',
    bindings: {
      userType: '@',
      onRegister: '&',
      onReset: '&',
      onLogin: '&'
    }
};

angular
    .module('components.auth')
    .component('login', login);
})(window.angular);
(function(angular){
'use strict';
LoginController.$inject = ["AuthService", "$state"];
function LoginController(AuthService, $state) {
  var ctrl = this;

  //initialize user data
  ctrl.$onInit = function() {
    //define variables
      ctrl.user = {
          email: '',
          password: '',
          type: ctrl.userType
      };

    ///define functions
    ctrl.login = login;
    ctrl.reset = reset;
  };

  function login(event) {
    ctrl.onLogin({
      $event: {
        user: event.user
      }
    });
  };

  function reset(event) {
    ctrl.onReset({
      $event: {
        email: event.email
      }
    });
  };

}

angular
  .module('components.auth')
  .controller('LoginController', LoginController);
})(window.angular);
(function(angular){
'use strict';
var reset = {
    templateUrl: './reset.html',
    controller: 'ResetController',
    bindings: {
      onLogin: '&',
      userType: '@',
      userEmail: '<',
      onReset: '&'
    }
};

angular
    .module('components.auth')
    .component('reset', reset);
})(window.angular);
(function(angular){
'use strict';
function ResetController() {

}


angular
  .module('components.auth')
  .controller('ResetController', ResetController);
})(window.angular);
(function(angular){
'use strict';
angular.module('templates', []).run(['$templateCache', function($templateCache) {$templateCache.put('./root.html','<div class="root">\n    <div ui-view></div>\n</div>\n');
$templateCache.put('./app-nav.html','<md-toolbar class="md-scroll-shrink background" flex>\n  <div class="md-toolbar-tools" layout="row" layout-align="space-between center">\n    <div>\n      <md-button ng-click="$ctrl.toggleLeft()" class="md-icon-button">\n        <img src="img/{{$ctrl.leftIcon}}.svg" />\n      </md-button>\n    </div>\n    <div>\n      <h1 class="text--weightBold text--upperCase" style="color: #2b5570">{{ $ctrl.title }}</h1>\n    </div>\n    <div>\n      <md-button ng-click="$ctrl.toggleRight()" class="md-icon-button">\n        <i style="color: #2b5570" class="material-icons">{{$ctrl.rightIcon}}</i>\n      </md-button>\n    </div>\n  </div>\n</md-toolbar>\n');
$templateCache.put('./app-sidenav.html','<md-sidenav class="md-sidenav-left sideNavLeft--width height--full background--baseColor" md-component-id="left" md-whiteframe="4" flex>\n\n  <md-content class="background--baseColor">\n    <md-card class="background sideNavLeft__userCard">\n      <md-card-title layout="row" layout-align="space-around center">\n        <div>\n          <img src="img/mughub__logoicon.png" width="60px" />\n        </div>\n        <div>\n          <p style="color: #2b5570" class="text--right text--weightBold text--upperCase md-body-1">{{ $ctrl.user.attributes.firstname }} {{ $ctrl.user.attributes.lastname }}</p>\n          <p style="color: #2b5570" class="text--right text--upperCase md-caption">{{ $ctrl.user.attributes.type }}</p>\n        </div>\n      </md-card-title>\n    </md-card>\n    <div layout="column" layout-align="center center">\n      <md-list-item ng-click="$ctrl.goToUploads()" md-ink-ripple="#2b5570" class="sideNavLeft__options">\n        <p style="color: #eaeaea" class="text--center text--weightBold text--upperCase">UPLOADS</p>\n      </md-list-item>\n      <md-list-item ng-click="$ctrl.goToHourLog()" md-ink-ripple="#2b5570" class="sideNavLeft__options">\n        <p style="color: #eaeaea" class="text--center text--weightBold text--upperCase">HOUR LOG</p>\n      </md-list-item>\n      <md-list-item ng-click="$ctrl.logout()" md-ink-ripple="#2b5570" class="sideNavLeft__options" flex>\n        <p style="color: #de6600" class="text--center text--weightBold text--upperCase">LOGOUT</p>\n      </md-list-item>\n    </div>\n  </md-content>\n\n</md-sidenav>\n');
$templateCache.put('./student-app.html','<div class="root">\n    <!-- <app-nav user="$ctrl.user" on-logout="$ctrl.logout();"></app-nav> -->\n    <!-- <md-sidenav flex-order="2" md-component-id="side" md-whiteframe="3" md-disable-backdrop class="md-sidenav-right md-no-pagination app__sidenav--height app__sidenav--width app__sidenav--position app__sidenav--overflow-x">\n        <div ui-view="side"></div>\n    </md-sidenav> -->\n    <div>\n        <div ui-view></div>\n    </div>\n</div>\n');
$templateCache.put('./tutor-app.html','<div class="root">\n    <!-- <app-nav user="$ctrl.user" on-logout="$ctrl.logout();"></app-nav> -->\n    <!-- <md-sidenav flex-order="2" md-component-id="side" md-whiteframe="3" md-disable-backdrop class="md-sidenav-right md-no-pagination app__sidenav--height app__sidenav--width app__sidenav--position app__sidenav--overflow-x">\n        <div ui-view="side"></div>\n    </md-sidenav> -->\n    <div>\n        <div ui-view></div>\n    </div>\n</div>\n');
$templateCache.put('./auth.html','<md-content class="background height--full width--full" layout="column" layout-align="center center">\n\n  <div>\n    <img src="img/mughub_logo.png" width="170px" />\n  </div>\n\n  <div class="width--full auth--animation ng-enter" style="margin-top: -30px;">\n    <md-tabs class="width--full md-no-animation" md-center-tabs="true" md-dynamic-height>\n\n      <md-tab label="STUDENT">\n        <md-content class="background auth--animation ng-enter">\n          <login ng-if="$ctrl.showLogin" on-login="$ctrl.login($event)" on-register="$ctrl.toggleRegister()" on-reset="$ctrl.toggleReset($event)" user-type="STUDENT"></login>\n          <register ng-if="$ctrl.showRegister" on-register="$ctrl.register($event)" on-login="$ctrl.toggleRegister()" user-type="STUDENT"></register>\n          <reset ng-if="$ctrl.showReset" on-reset="$ctrl.reset($ctrl.userEmail)" on-login="$ctrl.toggleLogin()" user-type="STUDENT" user-email="$ctrl.userEmail"></reset>\n        </md-content>\n      </md-tab>\n\n      <md-tab label="TUTOR">\n        <md-content class="background auth--animation ng-enter">\n          <login ng-if="$ctrl.showLogin" on-login="$ctrl.login($event)" on-register="$ctrl.toggleRegister()" on-reset="$ctrl.toggleReset($event)" user-type="TUTOR"></login>\n          <register ng-if="$ctrl.showRegister" on-register="$ctrl.register($event)" on-login="$ctrl.toggleRegister()" user-type="TUTOR"></register>\n          <reset ng-if="$ctrl.showReset" on-reset="$ctrl.reset($ctrl.userEmail)" on-login="$ctrl.toggleLogin()" user-type="TUTOR" user-email="$ctrl.userEmail"></reset>\n        </md-content>\n      </md-tab>\n\n    </md-tabs>\n  </div>\n\n</md-content>\n');
$templateCache.put('./hours.html','<div layout="row" class="auth--animation" flex>\n\n  <app-sidenav></app-sidenav>\n\n  <md-content class="background" flex>\n\n    <app-nav title="hour log" left-icon="notes" right-icon="group"></app-nav>\n\n    <md-content class="background" flex>\n      <p>\n        Hours go here.\n      </p>\n    </md-content>\n\n  </md-content>\n\n  <md-sidenav class="md-sidenav-right sideNavLeft--width height--full background--baseColor" md-component-id="right" md-disable-backdrop md-is-locked-open="$mdMedia(\'gt-sm\')" md-whiteframe="3" flex>\n\n    <md-toolbar class="md-scroll-shrink background--baseColor" flex>\n      <h1 layout="row" layout-align="center center" class="md-toolbar-tools text--center text--weightBold">STUDENTS</h1>\n    </md-toolbar>\n\n    <md-content class="background--baseColor" layout-margin>\n      <p>\n        This will be the tutor\'s student contact list.\n      </p>\n    </md-content>\n\n  </md-sidenav>\n\n</div>\n');
$templateCache.put('./memos.html','<div>\n  This is the app.\n</div>\n');
$templateCache.put('./student.html','<div>\n  This is the student app.\n</div>\n');
$templateCache.put('./uploads.html','<div layout="row" layout-align="space-between start" class="auth--animation width--full">\n\n  <app-sidenav></app-sidenav>\n\n  <div class="width--full">\n    <md-content class="background">\n      <app-nav title="uploads" left-icon="notes" right-icon="group"></app-nav>\n      <md-content class="background" flex>\n        <p>\n          Uploads go here.\n        </p>\n      </md-content>\n    </md-content>\n  </div>\n\n  <div>\n    <md-content>\n      <md-sidenav class="md-sidenav-right sideNavLeft--width height--full background--baseColor" md-component-id="right" md-disable-backdrop md-is-locked-open="$mdMedia(\'gt-sm\')" md-whiteframe="3">\n        <md-toolbar class="md-scroll-shrink background--baseColor" flex>\n          <h1 layout="row" layout-align="center center" class="md-toolbar-tools text--center text--weightBold">STUDENTS</h1>\n        </md-toolbar>\n        <md-content class="background--baseColor" layout-margin>\n          <p>\n            This will be the tutor\'s student contact list.\n          </p>\n        </md-content>\n      </md-sidenav>\n    </md-content>\n  </div>\n  \n</div>\n');
$templateCache.put('./auth-form.html','<form layout="column" layout-align="center center" name="authForm" novalidate ng-submit="$ctrl.submitForm();">\n  <md-list layout="column" layout-align="center center">\n\n    <div ng-if="$ctrl.button === \'Register\'">\n      <md-list-item layout="row" layout-align="space-between center">\n\n        <div>\n          <md-input-container layout="row" layout-align="center center" class="auth">\n            <label class="auth__label auth__label--paddingName">FIRST NAME</label>\n            <input class="auth__input auth__input--height auth__input--widthHalf auth__input--borderRadiusFirstName text--center text--font" type="text" name="firstname" ng-model="$ctrl.user.firstname" autocomplete="off" />\n          </md-input-container>\n        </div>\n\n        <div>\n          <md-input-container layout="row" layout-align="center center" class="auth">\n            <label class="auth__label auth__label--paddingName">LAST NAME</label>\n            <input class="auth__input auth__input--height auth__input--widthHalf auth__input--borderRadiusLastName text--center text--font" type="text" name="lastname" ng-model="$ctrl.user.lastname" autocomplete="off" />\n          </md-input-container>\n        </div>\n\n      </md-list-item>\n    </div>\n\n    <div class="auth--marginTop">\n      <md-list-item>\n        <md-input-container layout="row" layout-align="center center" class="auth">\n          <label class="auth__label auth__label--padding"><i class="material-icons md-16 auth__icon">email</i>EMAIL</label>\n          <input class="auth__input auth__input--height auth__input--width text--font" type="email" name="email" ng-model="$ctrl.user.email" autocomplete="off" />\n        </md-input-container>\n      </md-list-item>\n    </div>\n\n    <div class="auth--marginTop">\n      <md-list-item>\n        <md-input-container layout="row" layout-align="center center" class="auth">\n          <label class="auth__label auth__label--padding"><i class="material-icons md-16 auth__icon">lock</i>PASSWORD</label>\n          <input class="auth__input auth__input--height auth__input--width text--font" type="password" name="password" ng-model="$ctrl.user.password" autocomplete="off" />\n        </md-input-container>\n        <p ng-if="$ctrl.button === \'Login\'" ng-click="$ctrl.reset()" class="auth__reset">?</p>\n      </md-list-item>\n    </div>\n\n    <div class="auth--marginTop">\n      <md-list-item>\n        <md-button type="submit" ng-disabled="authForm.$invalid" class="md-raised auth__button auth__input--height auth__input--width">\n          <h1 class="auth__buttonText">{{ $ctrl.button }} as a {{ $ctrl.userType }}</h1>\n        </md-button>\n      </md-list-item>\n    </div>\n\n\n  </md-list>\n</form>\n');
$templateCache.put('./login.html','<div layout="column" layout-align="center" class="auth--animation">\n  <div>\n    <auth-form user="$ctrl.user" user-type="$ctrl.userType" button="Login" on-submit="$ctrl.login($event);" on-reset="$ctrl.reset($event)">\n    </auth-form>\n  </div>\n  <center>\n    <div>\n      <a ng-click="$ctrl.onRegister($event)" class="auth__link">\n      Don\'t have an account? Create one here.\n    </a>\n    </div>\n  </center>\n</div>\n');
$templateCache.put('./register.html','<div layout="column" layout-align="center" class="auth--animation">\n    <div>\n        <auth-form user="$ctrl.user" user-type="$ctrl.userType" message="{{ $ctrl.error }}" button="Register" on-submit="$ctrl.register($event);">\n        </auth-form>\n    </div>\n    <center>\n        <div>\n            <a ng-click="$ctrl.onLogin($event)" class="auth__link">Already have an account? Login here.</a>\n        </div>\n    </center>\n</div>\n');
$templateCache.put('./reset.html','<div layout="column" layout-align="center" class="auth--animation">\n    <form layout="column" layout-align="center center" name="authForm" novalidate ng-submit="$ctrl.onReset($event)">\n\n      <md-list layout="column" layout-align="center center">\n\n        <div class="auth--marginTop">\n          <md-list-item>\n            <md-input-container layout="row" layout-align="center center" class="auth">\n              <label class="auth__label auth__label--padding"><i class="material-icons md-16 auth__icon">email</i>EMAIL</label>\n              <input class="auth__input auth__input--height auth__input--width text--font" type="email" name="email" ng-model="$ctrl.userEmail" autocomplete="off" />\n            </md-input-container>\n          </md-list-item>\n        </div>\n\n        <div class="auth--marginTop">\n          <md-list-item>\n            <md-button type="submit" ng-disabled="authForm.$invalid" class="md-raised auth__button auth__input--height auth__input--width">\n              <h1 class="auth__buttonText">RESET {{ $ctrl.userType }} ACOUNT</h1>\n            </md-button>\n          </md-list-item>\n        </div>\n\n      </md-list>\n    </form>\n\n  <center>\n    <div>\n      <a ng-click="$ctrl.onLogin($event)" class="auth__link">Or login with an existing account.</a>\n    </div>\n  </center>\n\n</div>\n');}]);})(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
